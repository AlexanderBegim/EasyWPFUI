<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="ExampleApplication.ControlPages.ButtonPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ExampleApplication.ControlPages"
      xmlns:controls="clr-namespace:ExampleApplication.Controls"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:ui="http://easywpfui.com/schemas"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ButtonPage">

    <Page.Resources>
        <Style x:Key="ColorButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="0" />
        </Style>
    </Page.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                  Padding="20">
        <StackPanel>
            <!-- Default Button -->
            <controls:ControlExample HeaderText="A simple Button with text content.">
                <controls:ControlExample.Example>
                    <Button x:Name="defaultButtonExample1"
                            Content="Standard XAML button"
                            IsEnabled="{Binding IsChecked, ElementName=defaultDisableButtonExample1, Converter={StaticResource InvertBooleanConverter}}"
                            IsEnabledChanged="defaultButtonExample1_IsEnabledChanged" />
                </controls:ControlExample.Example>

                <controls:ControlExample.Options>
                    <CheckBox x:Name="defaultDisableButtonExample1"
                              Content="Disable Button" />
                </controls:ControlExample.Options>

                <controls:ControlExample.Xaml>
                    <system:String>
                        &lt;Button Content="Standard XAML button" Click="Button_Click" $(IsEnabled)/&gt;
                    </system:String>
                </controls:ControlExample.Xaml>

                <controls:ControlExample.Substitutions>
                    <controls:ControlExampleSubstitution x:Name="defaultButtonExample1Substitution"
                                                         Key="IsEnabled"
                                                         Value="IsEnabled=&quot;False&quot;" />
                </controls:ControlExample.Substitutions>
            </controls:ControlExample>
            
            <!-- Accent Button -->
            <controls:ControlExample HeaderText="Accent style applied to Button.">
                <controls:ControlExample.Example>
                    <Button Style="{StaticResource AccentButtonStyle}" Content="Accent style button" />
                </controls:ControlExample.Example>

                <controls:ControlExample.Xaml>
                    <system:String>
                        &lt;Button Style="{StaticResource AccentButtonStyle}" Content="Accent style button" /&gt;
                    </system:String>
                </controls:ControlExample.Xaml>
            </controls:ControlExample>
            
            <!-- Repeat Button -->
            <controls:ControlExample HeaderText="A simple RepeatButton with text content.">
                <controls:ControlExample.Example>
                    <StackPanel Orientation="Horizontal">
                        <RepeatButton x:Name="repeatButtonExample1"
                                      Content="Click and hold"
                                      Click="repeatButtonExample1_Click"
                                      IsEnabled="{Binding IsChecked, ElementName=disableRepeatButtonExample1, Converter={StaticResource InvertBooleanConverter}}"
                                      IsEnabledChanged="repeatButtonExample1_IsEnabledChanged"/>

                        <TextBlock x:Name="repeatButtonExample1Output"
                                   Margin="8,0,0,0"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </controls:ControlExample.Example>

                <controls:ControlExample.Options>
                    <CheckBox x:Name="disableRepeatButtonExample1"
                              Content="Disable Button" />
                </controls:ControlExample.Options>

                <controls:ControlExample.Xaml>
                    <system:String>
                        &lt;RepeatButton Content="Click and hold" Click="RepeatButton_Click" $(IsEnabled)/&gt;
                    </system:String>
                </controls:ControlExample.Xaml>

                <controls:ControlExample.Substitutions>
                    <controls:ControlExampleSubstitution x:Name="repeatButtonExample1Substitution"
                                                         Key="IsEnabled"
                                                         Value= "IsEnabled=&quot;False&quot; "/>
                </controls:ControlExample.Substitutions>
            </controls:ControlExample>
            
            <!-- Toggle Button -->
            <controls:ControlExample HeaderText="A simple ToggleButton with text content.">
                <controls:ControlExample.Example>
                    <ToggleButton x:Name="toggleButtonExample1"
                                  Content="ToggleButton"
                                  Checked="ToggleButtonExample1_Checked"
                                  Unchecked="ToggleButtonExample1_Unchecked"
                                  IsEnabled="{Binding IsChecked, ElementName=disableToggleButtonExample1, Converter={StaticResource InvertBooleanConverter}}"
                                  IsEnabledChanged="ToggleButtonExample1_IsEnabledChanged"/>
                </controls:ControlExample.Example>

                <controls:ControlExample.Output>
                    <TextBlock x:Name="toggleButtonExample1Output" />
                </controls:ControlExample.Output>

                <controls:ControlExample.Options>
                    <CheckBox x:Name="disableToggleButtonExample1"
                              Content="Disable Button" />
                </controls:ControlExample.Options>

                <controls:ControlExample.Xaml>
                    <system:String>
                        &lt;RepeatButton Content="Click and hold" Click="RepeatButton_Click" $(IsEnabled)/&gt;
                    </system:String>
                </controls:ControlExample.Xaml>

                <controls:ControlExample.Substitutions>
                    <controls:ControlExampleSubstitution x:Name="toggleButtonExample1Substitution"
                                                         Key="IsEnabled"
                                                         Value= "IsEnabled=&quot;False&quot; "/>
                </controls:ControlExample.Substitutions>
            </controls:ControlExample>
            
            <!--
                TODO Implement DropDownButton
            -->
            
            <!-- Split Button -->
            <controls:ControlExample HeaderText="A SplitButton controlling text color in a RichEditBox"
                                     XamlSource="Buttons/SplitButton.txt">
                <controls:ControlExample.Example>
                    <ui:SplitButton x:Name="splitButtonExample1"
                                    Padding="0"
                                    MinHeight="0"
                                    MinWidth="0"
                                    VerticalAlignment="Top"
                                    Click="splitButtonExample1_Click">
                        <Rectangle x:Name="CurrentColor"
                                   Width="32"
                                   Height="32"
                                   Fill="Green"
                                   Margin="0"/>

                        <ui:SplitButton.Flyout>
                            <ui:Flyout Placement="Bottom">
                                <WrapPanel Orientation="Horizontal" MaxWidth="136">
                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,0,20,0"
                                            AutomationProperties.Name="Red">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Red"/>
                                        </Button.Content>
                                    </Button>

                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,0,20,0"
                                            AutomationProperties.Name="Orange">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Orange"/>
                                        </Button.Content>
                                    </Button>

                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            AutomationProperties.Name="Yellow">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Yellow"/>
                                        </Button.Content>
                                    </Button>

                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,20,20,0"
                                            AutomationProperties.Name="Green">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Green"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,20,20,0"
                                            AutomationProperties.Name="Blue">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Blue"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,20,0,0"
                                            AutomationProperties.Name="Indigo">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Indigo"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,20,20,0"
                                            AutomationProperties.Name="Violet">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Violet"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Click="Button_Click"
                                            Style="{StaticResource ColorButtonStyle}"
                                            Margin="0,20,0,0"
                                            AutomationProperties.Name="Gray">
                                        <Button.Content>
                                            <Rectangle Width="32" Height="32" Fill="Gray"/>
                                        </Button.Content>
                                    </Button>
                                </WrapPanel>
                            </ui:Flyout>
                        </ui:SplitButton.Flyout>
                    </ui:SplitButton>
                </controls:ControlExample.Example>

                <controls:ControlExample.Options>
                    <RichTextBox x:Name="splitButtonExample1RichTextBox"
                                 Width="240"
                                 MinHeight="96"
                                 ui:ControlHelper.PlaceholderText="Type something here" />
                </controls:ControlExample.Options>
            </controls:ControlExample>
            
            <!-- Toggle Split Button-->
            <controls:ControlExample HeaderText="Using ToggleSplitButton to control bulleted list functionality in RichEditBox"
                                     XamlSource="Buttons/ToggleSplitButton.txt">
                <controls:ControlExample.Example>
                    <ui:ToggleSplitButton x:Name="toggleSplitButtonExample1"
                                          VerticalAlignment="Top"
                                          IsCheckedChanged="toggleSplitButtonExample1_IsCheckedChanged">
                        <ui:SymbolIcon x:Name="toggleSplitButtonExample1SymbolIcon"
                                       Symbol="List"
                                       TextElement.FontSize="20"/>
                        
                        <ui:ToggleSplitButton.Flyout>
                            <ui:Flyout Placement="Bottom">
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                                            <Setter Property="Padding" Value="4"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="0"/>
                                            <Setter Property="Margin" Value="6"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <Button Click="BulletButton_Click"
                                            AutomationProperties.Name="Bulleted list">
                                        <ui:SymbolIcon Symbol="List"
                                                       TextElement.FontSize="20" />
                                    </Button>
                                    <Button Click="BulletButton_Click"
                                            AutomationProperties.Name="Roman numerals list">
                                        <ui:SymbolIcon Symbol="Bullets"
                                                       TextElement.FontSize="20" />
                                    </Button>
                                </StackPanel>
                            </ui:Flyout>
                        </ui:ToggleSplitButton.Flyout>
                    </ui:ToggleSplitButton>
                </controls:ControlExample.Example>

                <controls:ControlExample.Options>
                    <RichTextBox x:Name="toggleSplitButtonExample1RichTextBox"
                                 Width="240"
                                 MinHeight="96"
                                 ui:ControlHelper.PlaceholderText="Type something here" />
                </controls:ControlExample.Options>
            </controls:ControlExample>
        </StackPanel>
    </ScrollViewer>
</Page>
