<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="ExampleApplication.ControlPages.InfoBarPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ExampleApplication.ControlPages"
      xmlns:controls="clr-namespace:ExampleApplication.Controls"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:ui="https://easywpfui.com/schemas"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="InfoBarPage">

    <ScrollViewer VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                  Padding="20">
        <StackPanel>
            <controls:ControlExample HeaderText="A closable InfoBar with options to change its Severity.">
                <controls:ControlExample.Example>
                    <ui:InfoBar x:Name="infoBarExample1"
                                IsOpen="True"
                                Title="Title"
                                Message="Essential app message for your users to be informed of, acknowledge, or take action on."
                                Severity="Informational" />
                </controls:ControlExample.Example>

                <controls:ControlExample.Options>
                    <StackPanel>
                        <CheckBox x:Name="infoBarExample1IsOpen"
                                  Content="IsOpen"
                                  IsChecked="{Binding ElementName=infoBarExample1, Path=IsOpen}"
                                  Click="infoBarExample1IsOpen_Click" />

                        <ComboBox x:Name="infoBarExample1Severity"
                                  ui:ControlHelper.Header="Severity"
                                  SelectedItem="{Binding ElementName=infoBarExample1, Path=Severity}"
                                  SelectionChanged="infoBarExample1Severity_SelectionChanged">
                            <ui:InfoBarSeverity>Informational</ui:InfoBarSeverity>
                            <ui:InfoBarSeverity>Success</ui:InfoBarSeverity>
                            <ui:InfoBarSeverity>Warning</ui:InfoBarSeverity>
                            <ui:InfoBarSeverity>Error</ui:InfoBarSeverity>
                        </ComboBox>
                    </StackPanel>
                </controls:ControlExample.Options>

                <controls:ControlExample.Xaml>
                    <system:String xml:space="preserve">
&lt;ui:InfoBar IsOpen="$(IsOpen)" Severity="$(Severity)"
       Title="Title" Message="Essential app message for your users to be informed of, acknowledge, or take action on." /&gt;
                    </system:String>
                </controls:ControlExample.Xaml>

                <controls:ControlExample.Substitutions>
                    <controls:ControlExampleSubstitution x:Name="infoBarExample1IsOpenSubstitution" Key="IsOpen" Value="True" />
                    <controls:ControlExampleSubstitution x:Name="infoBarExample1SeveritySubstitution" Key="Severity" Value="True" />
                </controls:ControlExample.Substitutions>
            </controls:ControlExample>
            
            <!-- -->

            <controls:ControlExample HeaderText="A closable InfoBar with a long or short message and various buttons">
                <controls:ControlExample.Example>
                    <ui:InfoBar x:Name="infoBarExample2"
                                IsOpen="True"
                                Title="Title"
                                Message="A short essential app message."/>
                </controls:ControlExample.Example>

                <controls:ControlExample.Options>
                    <StackPanel>
                        <CheckBox x:Name="infoBarExample2IsOpen"
                                  Content="IsOpen"
                                  IsChecked="{Binding ElementName=infoBarExample2, Path=IsOpen}"
                                  Click="infoBarExample2IsOpen_Click" />

                        <ComboBox x:Name="infoBarExample2MessageComboBox"
                                  ui:ControlHelper.Header="Message Length"
                                  SelectionChanged="infoBarExample2MessageComboBox_SelectionChanged"
                                  SelectedIndex="0">
                            <ComboBoxItem Content="Short" />
                            <ComboBoxItem Content="Long" />
                        </ComboBox>

                        <ComboBox x:Name="infoBarExample2ActionButtonComboBox"
                                  ui:ControlHelper.Header="Action Button"
                                  SelectionChanged="infoBarExample2ActionButtonComboBox_SelectionChanged"
                                  SelectedIndex="0">
                            <ComboBoxItem Content="None" />
                            <ComboBoxItem Content="Button" />
                        </ComboBox>
                    </StackPanel>
                </controls:ControlExample.Options>

                <controls:ControlExample.Xaml>
                    <system:String xml:space="preserve">
&lt;ui:InfoBar IsOpen="$(IsOpen)" Title="Title" Message="$(DisplayMessage)" &gt;
    $(DisplayButton)
&lt;/ui:InfoBar&gt;
                    </system:String>
                </controls:ControlExample.Xaml>

                <controls:ControlExample.Substitutions>
                    <controls:ControlExampleSubstitution x:Name="infoBarExample2IsOpenSubstitution" Key="IsOpen" Value="True" />
                    <controls:ControlExampleSubstitution x:Name="infoBarExample2DisplayMessageSubstitution" Key="DisplayMessage" Value="A short essential app message."/>
                    <controls:ControlExampleSubstitution x:Name="infoBarExample2DisplayButtonSubstitution" Key="DisplayButton" Value=""/>
                </controls:ControlExample.Substitutions>
            </controls:ControlExample>
            
            <!-- -->

            <controls:ControlExample HeaderText="A closable InfoBar with options to display the close button and icon">
                <controls:ControlExample.Example>
                    <ui:InfoBar x:Name="infoBarExample3"
                                IsOpen="True"
                                IsIconVisible="True"
                                IsClosable="True"
                                Title="Title"
                                Message="Essential app message for your users to be informed of, acknowledge, or take action on." />
                </controls:ControlExample.Example>
                
                <controls:ControlExample.Options>
                    <StackPanel>
                        <CheckBox x:Name="IsOpenCheckBox3"
                                  Content="Is Open"
                                  IsChecked="{Binding ElementName=infoBarExample3, Path=IsOpen}"
                                  Click="IsOpenCheckBox3_Click"/>
                        
                        <CheckBox x:Name="IsIconVisibleCheckBox"
                                  Content="Is Icon Visible"
                                  IsChecked="{Binding ElementName=infoBarExample3, Path=IsIconVisible}"
                                  Click="IsIconVisibleCheckBox_Click"/>
                        
                        <CheckBox x:Name="IsClosableCheckBox"
                                  Content="Is Closable"
                                  IsChecked="{Binding ElementName=infoBarExample3, Path=IsClosable}"
                                  Click="IsClosableCheckBox_Click"/>
                    </StackPanel>
                </controls:ControlExample.Options>
                <controls:ControlExample.Xaml>
                    <system:String xml:space="preserve">
&lt;ui:InfoBar IsOpen="$(IsOpen)" IsIconVisible="$(IsIconVisible)" IsClosable="$(IsClosable)"
    Title="Title" Message="Essential app message for your users to be informed of, acknowledge, or take action on." /&gt;
                    </system:String>
                </controls:ControlExample.Xaml>
                <controls:ControlExample.Substitutions>
                    <controls:ControlExampleSubstitution x:Name="infoBarExample3IsOpenSubstitution" Key="IsOpen" Value="True" />
                    <controls:ControlExampleSubstitution x:Name="infoBarExample3IsIconVisibleSubstitution" Key="IsIconVisible" Value="True" />
                    <controls:ControlExampleSubstitution x:Name="infoBarExample3IsClosableSubstitution" Key="IsClosable" Value="True" />
                </controls:ControlExample.Substitutions>
            </controls:ControlExample>
        </StackPanel>
    </ScrollViewer>
</Page>
