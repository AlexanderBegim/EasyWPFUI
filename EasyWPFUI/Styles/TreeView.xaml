<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyWPFUI.Styles"
                    xmlns:helpers="clr-namespace:EasyWPFUI.Controls.Helpers">

    <Style x:Key="DefaultTreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource TreeViewItemBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource TreeViewItemBorderThemeThickness}"/>
        <Setter Property="MinHeight" Value="{DynamicResource TreeViewItemMinHeight}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <!--<Setter Property="IsHoldingEnabled" Value="True" />-->
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="{DynamicResource ListViewItemMinWidth}" />
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="helpers:ControlHelper.FocusVisualMargin" Value="0" />
        <Setter Property="helpers:TreeViewItemHelper.IsHelperEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="LayoutRoot"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter x:Name="ContentPresenter"
                                                                  ContentSource="Content"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border x:Name="ContentPresenterGrid"
                                Margin="0,0,0,0"
                                Padding="{TemplateBinding helpers:TreeViewItemHelper.Indentation}"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                MinHeight="{TemplateBinding MinHeight}"
                                CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}">

                            <Border>
                                <Grid x:Name="MultiSelectGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <!--<Border x:Name="ExpandCollapseChevron"
                                        Grid.Column="1"
                                        Padding="12,0,12,0"
                                        Width="Auto"
                                        Opacity="{TemplateBinding GlyphOpacity}"
                                        Background="Transparent">-->

                                    <ToggleButton x:Name="ExpandCollapseChevron"
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                                  Grid.Column="1"
                                                  Padding="12,0,12,0"
                                                  Width="Auto"
                                                  Opacity="1"
                                                  Background="Transparent"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                                        <Grid>
                                            <!--<TextBlock Foreground="{TemplateBinding GlyphBrush}"
                                                   Width="12"
                                                   Height="12"
                                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}"
                                                   FontSize="{TemplateBinding GlyphSize}"
                                                   Text="{TemplateBinding CollapsedGlyph}"
                                                   FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                   VerticalAlignment="Center"
                                                   IsHitTestVisible="False" />

                                        <TextBlock Foreground="{TemplateBinding GlyphBrush}"
                                                   Width="12"
                                                   Height="12"
                                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}" 
                                                   FontSize="{TemplateBinding GlyphSize}"
                                                   Text="{TemplateBinding ExpandedGlyph}"
                                                   FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                   VerticalAlignment="Center"
                                                   IsHitTestVisible="False" />-->

                                            <TextBlock x:Name="CollapsedGlyph"
                                                       Foreground="{DynamicResource TreeViewItemForeground}"
                                                       Width="12"
                                                       Height="12"
                                                       Visibility="Visible"
                                                       FontSize="12"
                                                       Text="&#xE70D;"
                                                       FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                       VerticalAlignment="Center"
                                                       IsHitTestVisible="False" />

                                            <TextBlock x:Name="ExpandedGlyph"
                                                       Foreground="{DynamicResource TreeViewItemForeground}"
                                                       Width="12"
                                                       Height="12"
                                                       Visibility="Collapsed" 
                                                       FontSize="12"
                                                       Text="&#xE76C;"
                                                       FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                       VerticalAlignment="Center"
                                                       IsHitTestVisible="False" />
                                        </Grid>
                                    </ToggleButton>

                                    <ContentPresenter x:Name="PART_Header"
                                                      Grid.Column="2"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}" />
                                </Grid>
                            </Border>
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Visibility="Collapsed"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="CollapsedGlyph" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ExpandedGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger SourceName="ContentPresenterGrid" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundPointerOver}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushPointerOver}" />
                        </Trigger>

                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushPressed}" />
                        </Trigger>-->

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelected}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelected}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelected}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundDisabled}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushDisabled}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="ContentPresenterGrid" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedPointerOver}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedPointerOver}" />
                        </MultiTrigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedPressed}" />
                        </MultiTrigger>-->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource TreeViewItemBackgroundSelectedDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundSelectedDisabled}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrushSelectedDisabled}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeViewStyle" TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_"
                                      Background="{TemplateBinding Background}"
                                      CanContentScroll="false"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>