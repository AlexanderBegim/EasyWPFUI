<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyWPFUI.Styles"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:helpers="clr-namespace:EasyWPFUI.Controls.Helpers"
                    xmlns:converters="clr-namespace:EasyWPFUI.Converters"
                    xmlns:controls="clr-namespace:EasyWPFUI.Controls">

    <!--<Thickness x:Key="TabViewHeaderPadding">8,8,4,0</Thickness>-->
    <Thickness x:Key="TabViewTopHeaderPadding">8,8,4,0</Thickness>
    <Thickness x:Key="TabViewBottomHeaderPadding">8,0,4,8</Thickness>
    <Thickness x:Key="TabViewLeftHeaderPadding">8,8,0,8</Thickness>
    <Thickness x:Key="TabViewRightHeaderPadding">0,8,8,8</Thickness>
    <Thickness x:Key="TabViewTopAddButtonPadding">10,0,10,0</Thickness>
    <Thickness x:Key="TabViewBottomAddButtonPadding">10,0,10,0</Thickness>
    <Thickness x:Key="TabViewLeftAddButtonPadding">0,8,0,8</Thickness>
    <Thickness x:Key="TabViewRightAddButtonPadding">0,8,0,8</Thickness>
    <Thickness x:Key="TabViewItemHeaderPadding">12,8,10,8</Thickness>
    <system:Double x:Key="TabViewItemMaxWidth">240</system:Double>
    <system:Double x:Key="TabViewItemMinWidth">100</system:Double>
    <system:Double x:Key="TabViewItemHeaderFontSize">12</system:Double>
    <system:Double x:Key="TabViewItemHeaderIconSize">16</system:Double>
    <Thickness x:Key="TabViewItemHeaderIconMargin">0,0,10,0</Thickness>
    <system:Double x:Key="TabViewItemHeaderCloseButtonSize">16</system:Double>
    <system:Double x:Key="TabViewItemHeaderCloseFontSize">12</system:Double>
    <Thickness x:Key="TabViewItemHeaderCloseMargin">10,0,0,0</Thickness>
    <system:Double x:Key="TabViewItemScrollButtonWidth">29</system:Double>
    <system:Double x:Key="TabViewItemScrollButtonHeight">29</system:Double>
    <Thickness x:Key="TabViewItemScrollButtonPadding">6,4,10,5</Thickness>
    <system:Double x:Key="TabViewShadowDepth">16</system:Double>
    <Thickness x:Key="TabViewItemSeparatorMargin">0,6,0,6</Thickness>

    <converters:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="Top" />
    <converters:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="Bottom" />
    <converters:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="Right" />
    <converters:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="Left" />

    <Style x:Key="DefaultTabItemStyle" TargetType="TabItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="helpers:ControlHelper.CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="helpers:TabItemHelper.IsHelperEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Style x:Key="DefaultTabItemCloseButtonStyle" TargetType="Button">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="{DynamicResource TabViewItemHeaderCloseButtonBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource TabViewItemHeaderCloseButtonForeground}" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                                <Setter Property="helpers:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
                                <Setter Property="helpers:ControlHelper.FocusVisualMargin" Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="PART_LayoutRoot"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}"
                                                    SnapsToDevicePixels="True">
                                                <controls:FontIcon x:Name="IconGlyph"
                                                                   Glyph="{TemplateBinding Content}"
                                                                   Foreground="{TemplateBinding Foreground}"
                                                                   FontSize="{TemplateBinding FontSize}"
                                                                   FontWeight="{TemplateBinding FontWeight}"
                                                                   Margin="{TemplateBinding Padding}"/>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="PART_LayoutRoot" Property="Background" Value="{DynamicResource TabViewItemHeaderCloseButtonBackgroundPointerOver}" />
                                                    <Setter TargetName="IconGlyph" Property="Foreground" Value="{DynamicResource TabViewItemHeaderCloseButtonForegroundPointerOver}" />
                                                </Trigger>

                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="PART_LayoutRoot" Property="Background" Value="{DynamicResource TabViewItemHeaderCloseButtonBackgroundPressed}" />
                                                    <Setter TargetName="IconGlyph" Property="Foreground" Value="{DynamicResource TabViewItemHeaderCloseButtonForegroundPressed}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>
                        
                        <Grid Margin="-1,0,0,0">
                            <!-- This item will cover the separator on its left side. -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="LeftColumn" Width="0"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="RightColumn" Width="0"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="LayoutRootScale" />
                            </Grid.RenderTransform>

                            <!--<Path x:Name="LeftRadiusRender"
                                  Grid.Column="0"
                                  Visibility="Collapsed"
                                  VerticalAlignment="Bottom"
                                  Height="4"
                                  Margin="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource TabViewLeftInsetCornerConverter}}"
                                  Stretch="Uniform"
                                  Fill="{DynamicResource TabViewItemHeaderBackgroundSelected}"
                                  Data="M4 0 L4 4 L0 4 A4,4 90 0 0 4 0 Z" />

                            <Path x:Name="RightRadiusRender"
                                  Grid.Column="2"
                                  Visibility="Collapsed"
                                  VerticalAlignment="Bottom"
                                  Height="4"
                                  Margin="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource TabViewRightInsetCornerConverter}}"
                                  Stretch="Uniform"
                                  Fill="{DynamicResource TabViewItemHeaderBackgroundSelected}"
                                  Data="M0 0 L0 4 L4 4 A4 4 90 0 1 0 0 Z" />-->

                            <Border x:Name="TabSeparator"
                                    HorizontalAlignment="Right"
                                    Width="1"
                                    Grid.Column="1"
                                    BorderBrush="{DynamicResource TabViewItemSeparator}"
                                    BorderThickness="1"
                                    Margin="{DynamicResource TabViewItemSeparatorMargin}"/>

                            <Border x:Name="TabContainer"
                                    Grid.Column="1"
                                    Background="{DynamicResource TabViewItemHeaderBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{DynamicResource TabViewItemHeaderPadding}"
                                    CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}">
                                
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Viewbox x:Name="IconBox"
                                             MaxWidth="{DynamicResource TabViewItemHeaderIconSize}"
                                             MaxHeight="{DynamicResource TabViewItemHeaderIconSize}"
                                             Margin="{DynamicResource TabViewItemHeaderIconMargin}">
                                        <ContentControl x:Name="IconControl"
                                                        Content="{TemplateBinding helpers:TabItemHelper.Icon}"
                                                        IsTabStop="False"
                                                        Foreground="{DynamicResource TabViewItemIconForeground}" />
                                    </Viewbox>

                                    <ContentPresenter x:Name="ContentPresenter"
                                                      Grid.Column="1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                      TextElement.FontSize="{DynamicResource TabViewItemHeaderFontSize}"
                                                      TextElement.Foreground="{DynamicResource TabViewItemHeaderForeground}" />

                                    <Button x:Name="CloseButton"
                                            Grid.Column="2"
                                            Width="{DynamicResource TabViewItemHeaderCloseButtonSize}"
                                            Height="{DynamicResource TabViewItemHeaderCloseButtonSize}"
                                            FontSize="{DynamicResource TabViewItemHeaderCloseFontSize}"
                                            Margin="{DynamicResource TabViewItemHeaderCloseMargin}"
                                            Content="&#xE711;"
                                            Style="{StaticResource DefaultTabItemCloseButtonStyle}"
                                            Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(helpers:TabItemHelper.IsClosable), RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TabControlHelper.CloseButtonOverlayMode), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Auto" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(helpers:TabItemHelper.IsClosable), RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TabControlHelper.CloseButtonOverlayMode), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="OnPointerOver" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(helpers:TabItemHelper.IsClosable), RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TabControlHelper.CloseButtonOverlayMode), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="OnPointerOver" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(helpers:TabItemHelper.IsClosable), RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TabControlHelper.CloseButtonOverlayMode), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Always" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <Trigger SourceName="IconControl" Property="Content" Value="{x:Null}">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                            <Setter TargetName="TabContainer" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:ControlHelper.CornerRadius), Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                            <Setter TargetName="TabSeparator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="TabContainer" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:ControlHelper.CornerRadius), Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                            <Setter TargetName="TabSeparator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="TabContainer" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:ControlHelper.CornerRadius), Converter={StaticResource RightCornerRadiusFilterConverter}}" />
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundPointerOver}" />
                            <Setter TargetName="IconControl" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemIconForegroundPointerOver}" />
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource TabViewItemHeaderPointerOverCloseButtonBackground}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource TabViewItemHeaderPointerOverCloseButtonForeground}" />
                        </Trigger>

                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundPressed}" />
                            <Setter TargetName="IconControl" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemIconForegroundPressed}" />
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource TabViewItemHeaderPressedCloseButtonBackground}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource TabViewItemHeaderPressedCloseButtonForeground}" />
                        </Trigger>-->

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundSelected}" />
                            <Setter TargetName="IconControl" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemIconForegroundSelected}" />
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundPointerOver}" />
                            <Setter TargetName="IconControl" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemIconForegroundPointerOver}" />
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                        </MultiTrigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundPressed}" />
                            <Setter TargetName="IconControl" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemIconForegroundPressed}" />
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                            <Setter TargetName="LeftRadiusRender" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RightRadiusRender" Property="Visibility" Value="Visible" />
                        </MultiTrigger>-->

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="TabContainer" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabViewItemHeaderForegroundDisabled}" />
                            <Setter TargetName="IconControl" Property="TextElement.Foreground" Value="{DynamicResource TabViewButtonForegroundDisabled}" />
                            <Setter TargetName="CloseButton" Property="Background" Value="{DynamicResource TabViewItemHeaderDisabledCloseButtonBackground}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource TabViewItemHeaderDisabledCloseButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTabControlStyle" TargetType="TabControl">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{DynamicResource TabViewBackground}" />
        <Setter Property="helpers:TabControlHelper.CloseButtonOverlayMode" Value="Auto" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="DefaultTabControlButtonStyle" TargetType="Button">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="{DynamicResource TabViewButtonBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TabViewButtonForeground}"/>
                                <Setter Property="FontSize" Value="11"/>
                                <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}"/>
                                <Setter Property="VerticalAlignment" Value="Bottom"/>
                                <Setter Property="Margin" Value="0,8,0,0"/>
                                <Setter Property="Padding" Value="{DynamicResource TabViewTopAddButtonPadding}"/>
                                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                                <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                                <Setter Property="helpers:ControlHelper.FocusVisualMargin" Value="-3"/>
                                <Setter Property="helpers:ControlHelper.CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="PART_LayoutRoot"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    SnapsToDevicePixels="True">
                                                <controls:FontIcon Glyph="{TemplateBinding Content}"
                                                                   FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                                   Foreground="{TemplateBinding Foreground}"
                                                                   FontSize="{TemplateBinding FontSize}"
                                                                   FontWeight="{TemplateBinding FontWeight}"
                                                                   Margin="{TemplateBinding Padding}"/>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource TabViewButtonBackgroundPointerOver}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource TabViewButtonForegroundPointerOver}" />
                                                </Trigger>

                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource TabViewButtonBackgroundPressed}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource TabViewButtonForegroundPressed}" />
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="{DynamicResource TabViewButtonBackgroundDisabled}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource TabViewButtonForegroundDisabled}" />
                                                </Trigger>

                                                <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                                                    <Setter TargetName="PART_LayoutRoot" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:ControlHelper.CornerRadius), Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                                                    <Setter TargetName="PART_LayoutRoot" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:ControlHelper.CornerRadius), Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                                                    <Setter TargetName="PART_LayoutRoot" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:ControlHelper.CornerRadius), Converter={StaticResource RightCornerRadiusFilterConverter}}" />
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>

                        <Grid x:Name="TabContainerGrid"
                              Background="{TemplateBinding Background}"
                              Grid.Row="0"
                              Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="TopContentRow" Height="Auto" />
                                <RowDefinition x:Name="TabColumnRow" Height="Auto" />
                                <RowDefinition x:Name="AddButtonRow" Height="Auto" />
                                <RowDefinition x:Name="BottomContentRow" Height="*" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" x:Name="LeftContentColumn"/>
                                <ColumnDefinition Width="Auto" x:Name="TabColumn"/>
                                <ColumnDefinition Width="Auto" x:Name="AddButtonColumn"/>
                                <ColumnDefinition Width="*" x:Name="RightContentColumn"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="LeftContentPresenter"
                                              Grid.Column="0"
                                              Content="{TemplateBinding helpers:TabControlHelper.TabStripHeader}"
                                              ContentTemplate="{TemplateBinding helpers:TabControlHelper.TabStripHeaderTemplate}"/>

                            <TabPanel x:Name="headerPanel"
                                      Background="Transparent"
                                      Grid.Column="1"
                                      IsItemsHost="true"
                                      KeyboardNavigation.TabIndex="1"
                                      Margin="{DynamicResource TabViewTopHeaderPadding}"
                                      Panel.ZIndex="1"
                                      helpers:TabControlHelper.CloseButtonOverlayMode="{TemplateBinding helpers:TabControlHelper.CloseButtonOverlayMode}"/>

                            <Button x:Name="AddButton"
                                    Grid.Column="2"
                                    Content="&#xE710;"
                                    VerticalAlignment="Stretch"
                                    Command="{TemplateBinding helpers:TabControlHelper.AddTabButtonCommand}"
                                    CommandParameter="{TemplateBinding helpers:TabControlHelper.AddTabButtonCommandParameter}"
                                    helpers:ControlHelper.CornerRadius="{DynamicResource OverlayCornerRadius}"
                                    Visibility="Collapsed"
                                    Style="{StaticResource DefaultTabControlButtonStyle}" />

                            <ContentPresenter x:Name="RightContentPresenter"
                                              Grid.Column="3"
                                              HorizontalAlignment="Stretch"
                                              Content="{TemplateBinding helpers:TabControlHelper.TabStripFooter}"
                                              ContentTemplate="{TemplateBinding helpers:TabControlHelper.TabStripFooterTemplate}" />
                        </Grid>

                        <Border x:Name="TabContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="Transparent"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="helpers:TabControlHelper.IsAddTabButtonVisible" Value="True">
                            <Setter TargetName="AddButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="TabContainerGrid" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter TargetName="headerPanel" Property="Margin" Value="{DynamicResource TabViewBottomHeaderPadding}" />
                            <Setter TargetName="AddButton" Property="Margin" Value="0,0,0,8" />
                            <Setter TargetName="AddButton" Property="Padding" Value="{DynamicResource TabViewBottomAddButtonPadding}" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="TabContainerGrid" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabContainerGrid" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter TargetName="LeftContentPresenter" Property="Grid.Row" Value="0" />
                            <Setter TargetName="LeftContentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="AddButton" Property="Grid.Row" Value="2" />
                            <Setter TargetName="AddButton" Property="Grid.Column" Value="0" />
                            <Setter TargetName="RightContentPresenter" Property="Grid.Row" Value="3" />
                            <Setter TargetName="RightContentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="LeftContentColumn" Property="Width">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RightContentColumn" Property="Width" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="{DynamicResource TabViewLeftHeaderPadding}" />
                            <Setter TargetName="AddButton" Property="Margin" Value="8,0,0,0" />
                            <Setter TargetName="AddButton" Property="Padding" Value="{DynamicResource TabViewLeftAddButtonPadding}" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="TabContainerGrid" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabContainerGrid" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter TargetName="LeftContentPresenter" Property="Grid.Row" Value="0" />
                            <Setter TargetName="LeftContentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="AddButton" Property="Grid.Row" Value="2" />
                            <Setter TargetName="AddButton" Property="Grid.Column" Value="0" />
                            <Setter TargetName="RightContentPresenter" Property="Grid.Row" Value="3" />
                            <Setter TargetName="RightContentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="LeftContentColumn" Property="Width">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RightContentColumn" Property="Width" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="{DynamicResource TabViewRightHeaderPadding}" />
                            <Setter TargetName="AddButton" Property="Margin" Value="0,0,8,0" />
                            <Setter TargetName="AddButton" Property="Padding" Value="{DynamicResource TabViewRightAddButtonPadding}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--
    ******************************************************************
    TabControl Pivot Style
    ******************************************************************
    -->

    
    <converters:CornerRadiusFilterConverter x:Key="TopLeftCornerRadiusDoubleValueConverter" Filter="TopLeftValue" />
    <converters:CornerRadiusFilterConverter x:Key="BottomRightCornerRadiusDoubleValueConverter" Filter="BottomRightValue" />

    <Style x:Key="DefaultPivotItemStyle" TargetType="TabItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource PivotHeaderItemFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource PivotHeaderItemFontFamily}" />
        <Setter Property="FontWeight" Value="{DynamicResource PivotHeaderItemThemeFontWeight}" />
        <!--<Setter Property="CharacterSpacing" Value="{DynamicResource PivotHeaderItemCharacterSpacing}" />-->
        <Setter Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundUnselected}" />
        <Setter Property="Foreground" Value="{DynamicResource PivotHeaderItemForegroundUnselected}" />
        <Setter Property="Padding" Value="{DynamicResource PivotHeaderItemMargin}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <!--<Setter Property="UseSystemFocusVisuals" Value="False" />-->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Grid"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                            </Grid.RenderTransform>

                            <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                              TextElement.FontFamily="{TemplateBinding FontFamily}"
                                              TextElement.FontWeight="{TemplateBinding FontWeight}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center" />

                            <Rectangle x:Name="SelectedPipe"
                                       Fill="{DynamicResource PivotHeaderItemSelectedPipeFill}"
                                       Height="2"
                                       VerticalAlignment="Bottom"
                                       HorizontalAlignment="Stretch"
                                       Margin="0,0,0,2"
                                       RadiusX="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                       RadiusY="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                            <Setter TargetName="SelectedPipe" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="SelectedPipe" Property="Margin" Value="0,2,0,0" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                            
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                            
                        </DataTrigger>
                        
                        <!-- IsSelected -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SelectedPipe" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PivotHeaderItemForegroundSelected}" />
                            <Setter TargetName="Grid" Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundSelected}" />
                        </Trigger>

                        <!-- IsUnSelected -->
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="SelectedPipe" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!-- IsSelected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PivotHeaderItemForegroundSelected}" />
                            <Setter TargetName="Grid" Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundSelected}" />
                        </Trigger>
                        
                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="SelectedPipe" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PivotHeaderItemForegroundUnselectedPointerOver}" />
                            <Setter TargetName="Grid" Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundUnselectedPointerOver}" />
                        </MultiTrigger>
                        
                        <!-- IsSelected MouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PivotHeaderItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="Grid" Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundSelectedPointerOver}" />
                        </MultiTrigger>


                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PivotHeaderItemForegroundUnselectedPressed}" />
                            <Setter TargetName="Grid" Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundUnselectedPressed}" />
                        </MultiTrigger>-->

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="SelectedPipe" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PivotHeaderItemForegroundSelectedPressed}" />
                            <Setter TargetName="Grid" Property="Background" Value="{DynamicResource PivotHeaderItemBackgroundSelectedPressed}" />
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultPivotStyle" TargetType="TabControl">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource PivotBackground}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultPivotItemStyle}" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid x:Name="RootElement"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          Background="{TemplateBinding Background}"
                          ClipToBounds="true">

                        <Grid.Resources>
                            <Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
                                <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
                                <Setter Property="FontWeight" Value="SemiBold" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ContentControl">
                                            <ContentPresenter Content="{TemplateBinding Content}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="TitleContentControlStyle" TargetType="ContentControl" BasedOn="{StaticResource BaseContentControlStyle}">
                                <Setter Property="FontFamily" Value="{DynamicResource PivotTitleFontFamily}" />
                                <Setter Property="FontWeight" Value="{DynamicResource PivotTitleThemeFontWeight}" />
                                <Setter Property="FontSize" Value="{DynamicResource PivotTitleFontSize}" />
                            </Style>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ContentControl x:Name="TitleContentControl"
                                        IsTabStop="False"
                                        Margin="{StaticResource PivotPortraitThemePadding}"
                                        Style="{StaticResource TitleContentControlStyle}"
                                        Content="{TemplateBinding helpers:TabControlPivotHelper.Title}"
                                        ContentTemplate="{TemplateBinding helpers:TabControlPivotHelper.TitleTemplate}" />

                        <Grid Grid.Row="1"
                              Margin="{TemplateBinding Padding}">
                            <Grid.Resources>
                                <ControlTemplate x:Key="NextTemplate" TargetType="RepeatButton">
                                    <Border x:Name="Root"
                                            Background="{DynamicResource PivotNextButtonBackground}"
                                            BorderThickness="{DynamicResource PivotNavButtonBorderThemeThickness}"
                                            BorderBrush="{DynamicResource PivotNextButtonBorderBrush}">

                                        <controls:FontIcon x:Name="Arrow"
                                                           FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                           FontSize="12"
                                                           Foreground="{DynamicResource PivotNextButtonForeground}"
                                                           Glyph="&#xE0E3;"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           UseLayoutRounding="False" />
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource PivotNextButtonBackgroundPointerOver}" />
                                            <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource PivotNextButtonBorderBrushPointerOver}" />
                                            <Setter TargetName="Arrow" Property="Foreground" Value="{DynamicResource PivotNextButtonForegroundPointerOver}" />
                                        </Trigger>

                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource PivotNextButtonBackgroundPressed}" />
                                            <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource PivotNextButtonBorderBrushPressed}" />
                                            <Setter TargetName="Arrow" Property="Foreground" Value="{DynamicResource PivotNextButtonForegroundPressed}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                                <ControlTemplate x:Key="PreviousTemplate" TargetType="RepeatButton">
                                    <Border x:Name="Root"
                                            Background="{DynamicResource PivotPreviousButtonBackground}"
                                            BorderThickness="{DynamicResource PivotNavButtonBorderThemeThickness}"
                                            BorderBrush="{DynamicResource PivotPreviousButtonBorderBrush}">

                                        <controls:FontIcon x:Name="Arrow"
                                                           FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                           FontSize="12"
                                                           Foreground="{DynamicResource PivotPreviousButtonForeground}"
                                                           Glyph="&#xE0E2;"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           UseLayoutRounding="False" />
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource PivotPreviousButtonBackgroundPointerOver}" />
                                            <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource PivotPreviousButtonBorderBrushPointerOver}" />
                                            <Setter TargetName="Arrow" Property="Foreground" Value="{DynamicResource PivotNextButtonForegroundPointerOver}" />
                                        </Trigger>

                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource PivotPreviousButtonBackgroundPressed}" />
                                            <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource PivotPreviousButtonBorderBrushPressed}" />
                                            <Setter TargetName="Arrow" Property="Foreground" Value="{DynamicResource PivotPreviousButtonForegroundPressed}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>

                            <Grid x:Name="PivotLayoutElement"
                                  Grid.Row="0"
                                  Background="{TemplateBinding Background}">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="PivotLayoutElementTranslateTransform" />
                                </Grid.RenderTransform>

                                <ContentPresenter x:Name="LeftHeaderPresenter"
                                                  Content="{TemplateBinding helpers:TabControlPivotHelper.LeftHeader}"
                                                  ContentTemplate="{TemplateBinding helpers:TabControlPivotHelper.LeftHeaderTemplate}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch" />

                                <ScrollViewer x:Name="PivotHeaderScrollViewer"
                                              Grid.Column="1"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Disabled"
                                              VerticalContentAlignment="Stretch">
                                    <StackPanel x:Name="HeaderContent"
                                                Orientation="Horizontal"
                                                Background="{DynamicResource PivotHeaderBackground}"
                                                IsItemsHost="true" />
                                </ScrollViewer>

                                <RepeatButton x:Name="PreviousButton"
                                              Grid.Column="1"
                                              Template="{StaticResource PreviousTemplate}"
                                              Width="20"
                                              Height="36"
                                              FocusVisualStyle="{x:Null}"
                                              Margin="{DynamicResource PivotNavButtonMargin}"
                                              IsTabStop="False"
                                              IsEnabled="False"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Opacity="0"
                                              Background="Transparent" 
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              CommandTarget="{Binding ElementName=PivotHeaderScrollViewer}" />

                                <RepeatButton x:Name="NextButton"
                                              Grid.Column="1"
                                              Template="{StaticResource NextTemplate}"
                                              Width="20"
                                              Height="36"
                                              FocusVisualStyle="{x:Null}"
                                              Margin="{DynamicResource PivotNavButtonMargin}"
                                              IsTabStop="False"
                                              IsEnabled="False"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Top"
                                              Opacity="0"
                                              Background="Transparent"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              CommandTarget="{Binding ElementName=PivotHeaderScrollViewer}" />

                                <ContentPresenter x:Name="RightHeaderPresenter"
                                                  Grid.Column="2"
                                                  Content="{TemplateBinding helpers:TabControlPivotHelper.RightHeader}"
                                                  ContentTemplate="{TemplateBinding helpers:TabControlPivotHelper.RightHeaderTemplate}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch" />
                            </Grid>

                            <Border x:Name="TabContentPanel"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    Grid.Row="1"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  Margin="{DynamicResource PivotItemMargin}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="helpers:TabControlPivotHelper.Title" Value="{x:Null}">
                            <Setter TargetName="TitleContentControl" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="helpers:TabControlPivotHelper.LeftHeader" Value="{x:Null}">
                            <Setter TargetName="LeftHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="helpers:TabControlPivotHelper.RightHeader" Value="{x:Null}">
                            <Setter TargetName="RightHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PivotLayoutElement" Property="IsMouseOver" Value="True" />
                                <Condition SourceName="TabContentPanel" Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="PreviousButton" Property="Opacity" Value="1" />
                            <Setter TargetName="PreviousButton" Property="IsEnabled" Value="True" />
                            
                            <Setter TargetName="NextButton" Property="Opacity" Value="1" />
                            <Setter TargetName="NextButton" Property="IsEnabled" Value="True" />
                        </MultiTrigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto"/>

                            <Setter TargetName="PivotLayoutElement" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TabContentPanel" Property="Grid.Row" Value="0"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="PivotLayoutElement" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PivotLayoutElement" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>

                            <Setter TargetName="PivotHeaderScrollViewer" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="VerticalScrollBarVisibility" Value="Hidden" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="HeaderContent" Property="Orientation" Value="Vertical" />

                            <Setter TargetName="PreviousButton" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PreviousButton" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PreviousButton" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PreviousButton" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="PreviousButton" Property="Width" Value="Auto" />
                            <Setter TargetName="PreviousButton" Property="Height" Value="Auto" />
                            <Setter TargetName="PreviousButton" Property="Margin" Value="0" />
                            <Setter TargetName="PreviousButton" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PreviousButton" Property="Command" Value="{x:Static ScrollBar.LineUpCommand}" />

                            <Setter TargetName="NextButton" Property="Grid.Column" Value="0" />
                            <Setter TargetName="NextButton" Property="Grid.Row" Value="1" />
                            <Setter TargetName="NextButton" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="NextButton" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="NextButton" Property="Width" Value="Auto" />
                            <Setter TargetName="NextButton" Property="Height" Value="Auto" />
                            <Setter TargetName="NextButton" Property="Margin" Value="0" />
                            <Setter TargetName="NextButton" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NextButton" Property="Command" Value="{x:Static ScrollBar.LineDownCommand}" />

                            <Setter TargetName="RightHeaderPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="RightHeaderPresenter" Property="Grid.Row" Value="2" />

                            <Setter TargetName="PART_SelectedContentHost" Property="Margin" Value="{DynamicResource PivotHorizontalItemMargin}" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="PivotLayoutElement" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PivotLayoutElement" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="TabContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>

                            <Setter TargetName="PivotHeaderScrollViewer" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="VerticalScrollBarVisibility" Value="Hidden" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="PivotHeaderScrollViewer" Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="HeaderContent" Property="Orientation" Value="Vertical" />

                            <Setter TargetName="PreviousButton" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PreviousButton" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PreviousButton" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PreviousButton" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="PreviousButton" Property="Width" Value="Auto" />
                            <Setter TargetName="PreviousButton" Property="Height" Value="Auto" />
                            <Setter TargetName="PreviousButton" Property="Margin" Value="0" />
                            <Setter TargetName="PreviousButton" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PreviousButton" Property="Command" Value="{x:Static ScrollBar.LineUpCommand}" />

                            <Setter TargetName="NextButton" Property="Grid.Column" Value="0" />
                            <Setter TargetName="NextButton" Property="Grid.Row" Value="1" />
                            <Setter TargetName="NextButton" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="NextButton" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="NextButton" Property="Width" Value="Auto" />
                            <Setter TargetName="NextButton" Property="Height" Value="Auto" />
                            <Setter TargetName="NextButton" Property="Margin" Value="0" />
                            <Setter TargetName="NextButton" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NextButton" Property="Command" Value="{x:Static ScrollBar.LineDownCommand}" />

                            <Setter TargetName="RightHeaderPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="RightHeaderPresenter" Property="Grid.Row" Value="2" />

                            <Setter TargetName="PART_SelectedContentHost" Property="Margin" Value="{DynamicResource PivotHorizontalItemMargin}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>