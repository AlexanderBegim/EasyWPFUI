<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyWPFUI.Styles"
                    xmlns:controls="clr-namespace:EasyWPFUI.Controls"
                    xmlns:helpers="clr-namespace:EasyWPFUI.Controls.Helpers"
                    xmlns:converters="clr-namespace:EasyWPFUI.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="ComboBox.xaml" />
        <ResourceDictionary Source="CheckBox.xaml" />
        <ResourceDictionary Source="TextBox.xaml" />
        <ResourceDictionary Source="ToggleButton.xaml" />
        <ResourceDictionary Source="Menu.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="DefaultToolBarTrayStyle" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
    </Style>

    <Style x:Key="DefaultToolBarStyle" TargetType="ToolBar">
        <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <Border x:Name="LayoutRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                        <Border.Resources>
                            <Style x:Key="ToolBarThumbStyle" TargetType="Thumb">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border SnapsToDevicePixels="True"
                                                    Padding="{TemplateBinding Padding}"
                                                    Background="Transparent">
                                                <Rectangle>
                                                    <Rectangle.Fill>
                                                        <DrawingBrush ViewboxUnits="Absolute"
                                                                      ViewportUnits="Absolute"
                                                                      Viewport="0,0,4,4"
                                                                      Viewbox="0,0,4,4"
                                                                      TileMode="Tile">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="{DynamicResource SystemControlHighlightChromeHighBrush}"
                                                                                     Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                                    <!--<GeometryDrawing Brush="{DynamicResource SystemControlHighlightChromeHighBrush}"
                                                                    Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>-->
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Cursor" Value="SizeAll"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="ToolBarOverflowButtonStyle" TargetType="ToggleButton">
                                <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Content" Value="&#xE0E5;" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="Bd"
                                                    Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="True">
                                                <controls:FontIcon Glyph="{TemplateBinding Content}"
                                                                   FontSize="12"
                                                                   Foreground="{TemplateBinding Foreground}" />
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="true">
                                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="{DynamicResource SystemControlDisabledChromeMediumLowBrush}" />
                                                    <Setter Property="Opacity" Value=".5" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                                        
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Resources>

                        <Grid>
                            <DockPanel KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb"
                                       Padding="5,3,2,3"
                                       DockPanel.Dock="Left"
                                       Style="{StaticResource ToolBarThumbStyle}"
                                       Width="10" />

                                <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  DockPanel.Dock="Left"
                                                  Margin="11,0,11,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <ToggleButton x:Name="OverflowButton"
                                              Width="30"
                                              DockPanel.Dock="Right"
                                              HorizontalAlignment="Right"
                                              ClickMode="Press"
                                              FocusVisualStyle="{x:Null}"
                                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsEnabled="{TemplateBinding HasOverflowItems}"
                                              Style="{StaticResource ToolBarOverflowButtonStyle}"/>

                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>

                            <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Focusable="false"
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=OverflowButton}"
                                   StaysOpen="false">

                                <Border x:Name="ToolBarSubMenuBorder"
                                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                                        CornerRadius="{DynamicResource OverlayCornerRadius}"
                                        RenderOptions.ClearTypeHint="Enabled">
                                    <Grid>
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="true"
                                                              Margin="4"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              WrapWidth="200" />

                                        <Border x:Name="MenuFlyoutPresenterBorder"
                                                BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                                                BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                                CornerRadius="{DynamicResource OverlayCornerRadius}" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                        </Trigger>

                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">

                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Padding" Value="5,0,5,0" />
                            <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
                            <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
                            <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,3,2,3" />

                            <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,11,0,11" />
                            <Setter TargetName="ToolBarHeader" Property="HorizontalAlignment" Value="Center" />

                            <Setter TargetName="OverflowButton" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="OverflowButton" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="OverflowButton" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="OverflowButton" Property="Width" Value="Auto" />
                            <Setter TargetName="OverflowButton" Property="Height" Value="30" />
                            <Setter TargetName="OverflowButton" Property="Content" Value="&#xF2B0;" />

                            <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Padding" Value="3" />
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="ComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="Padding" Value="7,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="25" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="LayoutRoot"
                          MinHeight="{TemplateBinding MinHeight}">
                        <Grid.Resources>
                            <ControlTemplate x:Key="TextBoxStyle" TargetType="TextBox">
                                <Grid>
                                    <Border x:Name="BorderElement"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}"/>

                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Margin="{TemplateBinding BorderThickness}"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                  IsTabStop="False"
                                                  Style="{StaticResource DefaultTextBoxContentHostStyle}" />

                                    <TextBlock x:Name="PlaceholderTextContentPresenter"
                                               Foreground="{DynamicResource TextControlPlaceholderForeground}"
                                               Margin="{TemplateBinding BorderThickness}"
                                               Padding="{TemplateBinding Padding}"
                                               Text="{TemplateBinding helpers:ControlHelper.PlaceholderText}"
                                               TextAlignment="{TemplateBinding TextAlignment}"
                                               TextWrapping="{TemplateBinding TextWrapping}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed"/>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--<Setter TargetName="BorderElement" Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />-->
                                        <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}" />
                                        <Setter TargetName="PART_ContentHost" Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}" />
                                        <Setter TargetName="PlaceholderTextContentPresenter" Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}" />
                                    </Trigger>

                                    <Trigger Property="IsSelectionActive" Value="True">
                                        <!--<Setter TargetName="BorderElement" Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />-->
                                        <!--<Setter TargetName="BorderElement" Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />-->
                                        <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}" />
                                        <Setter TargetName="BorderElement" Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
                                        <Setter TargetName="PART_ContentHost" Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}" />
                                        <Setter TargetName="PlaceholderTextContentPresenter" Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundFocused}" />
                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="BorderElement" Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
                                        <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
                                        <Setter TargetName="PART_ContentHost" Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
                                        <Setter TargetName="PlaceholderTextContentPresenter" Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="32" MaxWidth="32" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="Background"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}"
                                MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />

                        <Border x:Name="HighlightBackground"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource ComboBoxBackgroundUnfocused}"
                                BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}"
                                Opacity="0" />

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="0"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <TextBlock x:Name="PlaceholderTextBlock"
                                   Grid.Column="0"
                                   Text="{TemplateBinding helpers:ControlHelper.PlaceholderText}"
                                   Foreground="{DynamicResource helpers:ControlHelper.PlaceholderForegrounds}"
                                   Margin="{TemplateBinding Padding}"
                                   Padding="0,0,32,0"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   IsHitTestVisible="False"
                                   Visibility="Collapsed" />

                        <TextBox x:Name="PART_EditableTextBox"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="2"
                                 Template="{StaticResource TextBoxStyle}"
                                 Margin="0,0,0,0"
                                 MinHeight="23"
                                 Padding="11,0,32,0"
                                 BorderBrush="Transparent"
                                 Background="Transparent"
                                 CaretBrush="{TemplateBinding Foreground}"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 helpers:ControlHelper.PlaceholderText="{TemplateBinding helpers:ControlHelper.PlaceholderText}"
                                 helpers:ControlHelper.PlaceholderForeground="{TemplateBinding helpers:ControlHelper.PlaceholderForeground}"
                                 Visibility="Collapsed"
                                 AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 helpers:ControlHelper.CornerRadius="{DynamicResource helpers:ControlHelper.CornerRadius}" />

                        <Border x:Name="DropDownOverlay"
                                Grid.Column="1"
                                Background="Transparent"
                                Margin="0,1,1,1"
                                Visibility="Collapsed"
                                Width="30"
                                HorizontalAlignment="Right" />

                        <controls:FontIcon x:Name="DropDownGlyph"
                                           Grid.Column="1"
                                           IsHitTestVisible="False"
                                           Margin="0,0,10,0"
                                           Foreground="{DynamicResource ComboBoxDropDownGlyphForeground}"
                                           FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                           FontSize="12"
                                           Glyph="&#xf2a3;"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center" />

                        <ToggleButton x:Name="ToggleButton"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2"
                                      IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                      Style="{StaticResource ComboBoxToggleButton}" />

                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Fade"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=Background}">
                            <Border x:Name="PopupBorder"
                                    Background="{DynamicResource ComboBoxDropDownBackground}"
                                    Padding="{DynamicResource ComboBoxDropdownBorderPadding}"
                                    HorizontalAlignment="Stretch"
                                    CornerRadius="{DynamicResource OverlayCornerRadius}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{Binding ActualWidth, ElementName=LayoutRoot}">
                                <Border x:Name="OuterBorder"
                                        BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
                                        BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}"
                                        CornerRadius="{Binding ElementName=PopupBorder, Path=CornerRadius}">
                                    <ScrollViewer x:Name="ScrollViewer"
                                                  Foreground="{DynamicResource ComboBoxDropDownForeground}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}">
                                        <ItemsPresenter Margin="{DynamicResource ComboBoxDropdownContentMargin}" />
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundPointerOver}" />
                            <Setter TargetName="PlaceholderTextBlock" Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundPointerOver}" />
                        </Trigger>

                        <!-- IsPressed -->
                        <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ComboBoxBackgroundPressed}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundPressed}" />
                            <Setter TargetName="PlaceholderTextBlock" Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundPressed}" />
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
                            <Setter TargetName="PlaceholderTextBlock" Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundDisabled}" />
                            <Setter TargetName="DropDownGlyph" Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
                        </Trigger>

                        <!-- IsEditable -->
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DropDownOverlay" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ToggleButton" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ToggleButton" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!-- Placeholder Visible -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="SelectedIndex" Value="-1" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!-- TextBoxFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox" Property="IsSelectionActive" Value="True" />
                                <Condition SourceName="ToggleButton" Property="IsMouseOver" Value="False" />
                                <Condition SourceName="ToggleButton" Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownGlyph" Property="Foreground" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}" />
                            <Setter TargetName="DropDownOverlay" Property="Margin" Value="0,2,2,2" />
                        </MultiTrigger>

                        <!-- TextBoxFocusedOverlayPointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox" Property="IsSelectionActive" Value="True" />
                                <Condition SourceName="ToggleButton" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownGlyph" Property="Foreground" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}" />
                            <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerOver}" />
                            <Setter TargetName="DropDownOverlay" Property="Margin" Value="0,2,2,2" />
                        </MultiTrigger>

                        <!-- TextBoxFocusedOverlayPressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox" Property="IsSelectionActive" Value="True" />
                                <Condition SourceName="ToggleButton" Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownGlyph" Property="Foreground" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}" />
                            <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerPressed}" />
                            <Setter TargetName="DropDownOverlay" Property="Margin" Value="0,2,2,2" />
                        </MultiTrigger>

                        <!-- TextBoxOverlayPointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox" Property="IsSelectionActive" Value="False" />
                                <Condition SourceName="ToggleButton" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}" />
                        </MultiTrigger>

                        <!-- TextBoxOverlayPressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox" Property="IsSelectionActive" Value="False" />
                                <Condition SourceName="ToggleButton" Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPointerPressed}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="CheckBox" BasedOn="{StaticResource DefaultToggleButtonStyle}">
        <Setter Property="Padding" Value="3" />
    </Style>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundBaseMediumLowBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Padding="{TemplateBinding Padding}">
                        <Rectangle x:Name="SeparatorRectangle"
                                   Fill="{TemplateBinding Background}"
                                   MinWidth="1"
                                   MinHeight="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton" BasedOn="{StaticResource DefaultToggleButtonStyle}">
        <Setter Property="Padding" Value="3" />
    </Style>

    <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="Menu" BasedOn="{StaticResource DefaultMenuStyle}">
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="Height" Value="23" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}">
                    <Setter Property="Height" Value="25" />
                    <Setter Property="Padding" Value="0" />

                    <Style.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Height" Value="25" />
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Height" Value="25" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">

                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Padding" Value="7,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <converters:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="Right" />

                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="ButtonLayoutGrid"
                                                    BorderBrush="{DynamicResource TextControlButtonBorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{DynamicResource TextControlButtonBackground}"
                                                    CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}">
                                                <TextBlock x:Name="GlyphElement"
                                                           Foreground="{DynamicResource TextControlButtonForeground}"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           FontStyle="Normal"
                                                           FontSize="12"
                                                           Text="&#xE10A;"
                                                           FontFamily="{DynamicResource SymbolThemeFontFamily}" />
                                                <!--<Path x:Name="GlyphElement"
                                                      Width="10"
                                                      Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Fill="{DynamicResource TextControlButtonForeground}"
                                                      Stretch="Uniform" />-->
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ButtonLayoutGrid" Property="Background" Value="{DynamicResource TextControlButtonBackgroundPointerOver}" />
                                                    <Setter TargetName="ButtonLayoutGrid" Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}" />
                                                    <Setter TargetName="GlyphElement" Property="Foreground" Value="{DynamicResource TextControlButtonForegroundPointerOver}" />
                                                </Trigger>

                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="ButtonLayoutGrid" Property="Background" Value="{DynamicResource TextControlButtonBackgroundPressed}" />
                                                    <Setter TargetName="ButtonLayoutGrid" Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPressed}" />
                                                    <Setter TargetName="GlyphElement" Property="Foreground" Value="{DynamicResource TextControlButtonForegroundPressed}" />
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="BorderElement"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius}"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}" />

                        <ScrollViewer x:Name="PART_ContentHost"
                                      Grid.Column="0"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}"
                                      IsTabStop="False"
                                      Focusable="False"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <TextBlock x:Name="PlaceholderTextContentPresenter"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Foreground="{TemplateBinding helpers:ControlHelper.PlaceholderForeground}"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Padding="{TemplateBinding Padding}"
                                   Text="{TemplateBinding helpers:ControlHelper.PlaceholderText}"
                                   TextAlignment="{TemplateBinding TextAlignment}"
                                   TextWrapping="{TemplateBinding TextWrapping}"
                                   IsHitTestVisible="False" />

                        <Button x:Name="DeleteButton"
                                Grid.Column="1"
                                Style="{DynamicResource DeleteButtonStyle}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                helpers:ControlHelper.CornerRadius="{TemplateBinding helpers:ControlHelper.CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                                Padding="{DynamicResource HelperButtonThemePadding}"
                                IsTabStop="False"
                                Focusable="False"
                                Visibility="Collapsed"
                                FontSize="{TemplateBinding FontSize}"
                                MinWidth="34"
                                VerticalAlignment="Stretch"
                                helpers:TextBoxHelper.DeleteButtonEnabled="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextBoxHelper.HasText" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="helpers:TextBoxHelper.HasText" Value="True">
                            <Setter TargetName="PlaceholderTextContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}" />
                            <Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />
                            <Setter TargetName="PlaceholderTextContentPresenter" Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter TargetName="PlaceholderTextContentPresenter" Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundFocused}" />
                            <!--<Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />-->
                            <Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />
                            <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}" />
                            <Setter TargetName="BorderElement" Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
                            <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
                            <Setter TargetName="PlaceholderTextContentPresenter" Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="RadioButton" BasedOn="{StaticResource DefaultToggleButtonStyle}">
        <Setter Property="Padding" Value="3" />
    </Style>

</ResourceDictionary>