<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyWPFUI.Themes"
                    xmlns:controls="clr-namespace:EasyWPFUI.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:EasyWPFUI.Converters"
                    xmlns:helpers="clr-namespace:EasyWPFUI.Controls.Helpers"
                    xmlns:primitives="clr-namespace:EasyWPFUI.Controls.Primitives">

    <converters:CornerRadiusFilterConverter x:Key="TopLeftCornerRadiusDoubleValueConverter" Filter="TopLeftValue" />
    <converters:CornerRadiusFilterConverter x:Key="BottomRightCornerRadiusDoubleValueConverter" Filter="BottomRightValue" />

    <primitives:BindingProxy x:Key="SystemControlErrorTextForegroundBrushBindingProxy" Data="{DynamicResource SystemControlErrorTextForegroundBrush}" />
    <primitives:BindingProxy x:Key="SystemAccentColorBindingProxy" Data="{DynamicResource SystemAccentColor}" />

    <ControlTemplate x:Key="DefaultModernProgressBarTemplate" TargetType="controls:ProgressBar">
        <Grid x:Name="LayoutRoot">
            <Grid.Resources>
                <Storyboard x:Key="UpdatingToDeterminateTransition">
                    <!--<RepositionThemeAnimation TargetName="DeterminateProgressBarIndicator" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />-->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.367" Value="0" KeySpline="0.1,0.9 0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="UpdatingErrorToErrorTransition">
                    <!--<RepositionThemeAnimation TargetName="DeterminateProgressBarIndicator" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />-->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.367" Value="0" KeySpline="0.1,0.9 0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="PausedToDeterminateTransition">
                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                </Storyboard>

                <Storyboard x:Key="ErrorToDeterminateTransition">
                    <ColorAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{TemplateBinding Foreground}" Duration="0:0:0.25"/>
                    <ColorAnimation Storyboard.TargetName="ProgressBarRoot" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{TemplateBinding Background}" Duration="0:0:0.25"/>
                </Storyboard>

                <Storyboard x:Key="IndeterminateToDeterminateTransition">
                    <!--<FadeInThemeAnimation TargetName="IndeterminateProgressBarIndicator" />-->
                    <!--<FadeInThemeAnimation TargetName="IndeterminateProgressBarIndicator2" />-->
                    <DoubleAnimation Storyboard.TargetName="IndeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.150" />
                    <DoubleAnimation Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.150" />
                </Storyboard>


                <Storyboard x:Key="UpdatingErrorStoryboard">
                    <ColorAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{Binding Source={StaticResource SystemControlErrorTextForegroundBrushBindingProxy},Path=Data.Color}" Duration="0:0:0.0"/>
                    <ColorAnimation Storyboard.TargetName="ProgressBarRoot" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource SystemControlErrorBackgroundColor}" Duration="0:0:0.0"/>
                </Storyboard>

                <Storyboard x:Key="IndeterminateStoryboard" RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition}"/>
                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}"/>
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationStartPosition}"/>
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.75" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationStartPosition}"/>
                        <SplineDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimation Storyboard.TargetName="IndeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <!--<FadeOutThemeAnimation TargetName="DeterminateProgressBarIndicator" />-->
                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.150" />
                </Storyboard>

                <Storyboard x:Key="IndeterminateErrorStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="IndeterminateProgressBarIndicator">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationStartPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationMidPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="IndeterminateProgressBarIndicator2">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:1.51" Value="1" />
                    </DoubleAnimationUsingKeyFrames>

                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame Value="{DynamicResource SystemAccentColor}" KeyTime="0:0:2.75" />
                        <LinearColorKeyFrame Value="{Binding Source={StaticResource SystemControlErrorTextForegroundBrushBindingProxy},Path=Data.Color}" KeyTime="0:0:3" />
                    </ColorAnimationUsingKeyFrames>

                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarRoot" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame Value="{DynamicResource SystemBaseLowColor}" KeyTime="0:0:2.75" />
                        <LinearColorKeyFrame Value="{DynamicResource SystemControlErrorBackgroundColor}" KeyTime="0:0:3" />
                    </ColorAnimationUsingKeyFrames>
                    <!--<FadeOutThemeAnimation TargetName="DeterminateProgressBarIndicator" />-->
                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.150" />
                </Storyboard>

                <Storyboard x:Key="ErrorStoryboard">
                    <ColorAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{Binding Source={StaticResource SystemControlErrorTextForegroundBrushBindingProxy},Path=Data.Color}" Duration="0:0:0.25"/>
                    <ColorAnimation Storyboard.TargetName="ProgressBarRoot" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource SystemControlErrorBackgroundColor}" Duration="0:0:0.25"/>
                </Storyboard>

                <Storyboard x:Key="IndeterminatePausedStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="IndeterminateProgressBarIndicator">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationEndPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.Container2AnimationStartPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationMidPosition}" KeySpline="0.4, 0.0, 0.6, 1.0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="IndeterminateProgressBarIndicator2">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:1.51" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:2.51" Value="{DynamicResource ProgressBarIndicatorPauseOpacity}" />
                    </DoubleAnimationUsingKeyFrames>

                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateProgressBarIndicator2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame Value="{DynamicResource SystemAccentColor}" KeyTime="0:0:2.5" />
                        <LinearColorKeyFrame Value="{DynamicResource SystemBaseMediumLowColor}" KeyTime="0:0:2.75" />
                    </ColorAnimationUsingKeyFrames>

                    <!--<FadeOutThemeAnimation TargetName="DeterminateProgressBarIndicator" />-->
                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.150" />
                </Storyboard>

                <Storyboard x:Key="PausedStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Fill" >
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemBaseMediumLowColor}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="{DynamicResource ProgressBarIndicatorPauseOpacity}" Duration="0:0:0.25" />
                </Storyboard>
            </Grid.Resources>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="Updating" To="Determinate" Storyboard="{StaticResource UpdatingToDeterminateTransition}" />
                        <VisualTransition From="UpdatingError" To="Error" Storyboard="{StaticResource UpdatingErrorToErrorTransition}" />
                        <VisualTransition From="Paused" To="Determinate" Storyboard="{StaticResource PausedToDeterminateTransition}" />
                        <VisualTransition From="Error" To="Determinate" Storyboard="{StaticResource ErrorToDeterminateTransition}" />
                        <VisualTransition From="Indeterminate" To="Determinate" Storyboard="{StaticResource IndeterminateToDeterminateTransition}" />
                    </VisualStateGroup.Transitions>

                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Updating" />
                    <VisualState x:Name="UpdatingError" Storyboard="{StaticResource UpdatingErrorStoryboard}" />
                    <VisualState x:Name="Indeterminate" Storyboard="{StaticResource IndeterminateStoryboard}" />
                    <VisualState x:Name="IndeterminateError" Storyboard="{StaticResource IndeterminateErrorStoryboard}" />
                    <VisualState x:Name="Error" Storyboard="{StaticResource ErrorStoryboard}" />
                    <VisualState x:Name="IndeterminatePaused" Storyboard="{StaticResource IndeterminatePausedStoryboard}" />
                    <VisualState x:Name="Paused" Storyboard="{StaticResource PausedStoryboard}" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border x:Name="ProgressBarRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">

                <Border Clip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClipRect}">
                    <Grid>
                        <Rectangle x:Name="DeterminateProgressBarIndicator"
                                               Margin="{TemplateBinding Padding}"
                                               Fill="{TemplateBinding Foreground}"         
                                               HorizontalAlignment="Left"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                            <Rectangle.RenderTransform>
                                <TranslateTransform />
                            </Rectangle.RenderTransform>
                        </Rectangle>

                        <Rectangle x:Name="IndeterminateProgressBarIndicator"
                                               Margin="{TemplateBinding Padding}"
                                               Fill="{TemplateBinding Foreground}"
                                               HorizontalAlignment="Left"
                                               Opacity="0"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                            <Rectangle.RenderTransform>
                                <TranslateTransform />
                            </Rectangle.RenderTransform>
                        </Rectangle>

                        <Rectangle x:Name="IndeterminateProgressBarIndicator2"
                                               Margin="{TemplateBinding Padding}"
                                               Fill="{TemplateBinding Foreground}"
                                               HorizontalAlignment="Left"
                                               Opacity="0"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                            <Rectangle.RenderTransform>
                                <TranslateTransform />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DefaultMetroProgressBarTemplate" TargetType="controls:ProgressBar">
        <Grid x:Name="LayoutRoot">
            <Grid.Resources>
                <Storyboard x:Key="UpdatingToDeterminateTransition">
                    <!--<RepositionThemeAnimation TargetName="ProgressBarIndicator" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />-->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.367" Value="0" KeySpline="0.1,0.9 0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="PausedToDeterminateTransition">
                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                </Storyboard>

                <Storyboard x:Key="IndeterminateToDeterminateTransition">
                    <!--<FadeInThemeAnimation TargetName="IndeterminateRoot" />-->
                    <DoubleAnimation Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                </Storyboard>


                <Storyboard x:Key="IndeterminateStoryboard" RepeatBehavior="Forever">
                    <DoubleAnimation Storyboard.TargetName="IndeterminateRoot" Duration="0:0:3.917" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition}" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" />

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                        <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimation Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <!-- Both FadeOutThemeAnimation and a DoubleAnimation on Opacity are necessary
                                                    here.  The FadeOutThemeAnimation is necessary in the Indeterminate state so
                                                    that we can do a FadeInThemeAnimation when transitioning back to the
                                                    Determinate state.  The DoubleAnimation on Opacity is necessary to hide the
                                                    DeterminateRoot immediately so that it does not slowly fade out during each
                                                    iteration of the Indeterminate state animation. -->
                    <!--<FadeOutThemeAnimation TargetName="DeterminateRoot" />-->

                    <DoubleAnimation Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.167" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:3.167" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.333" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:3.333" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:3.5" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.667" Value="1" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:3.667" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="IndeterminateErrorStoryboard">
                    <!--<DoubleAnimation Storyboard.TargetName="IndeterminateRoot" Duration="0:0:3.917" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition}" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" />-->

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimation Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <!-- Both FadeOutThemeAnimation and a DoubleAnimation on Opacity are necessary
                                                    here.  The FadeOutThemeAnimation is necessary in the Indeterminate state so
                                                    that we can do a FadeInThemeAnimation when transitioning back to the
                                                    Determinate state.  The DoubleAnimation on Opacity is necessary to hide the
                                                    DeterminateRoot immediately so that it does not slowly fade out during each
                                                    iteration of the Indeterminate state animation. -->
                    <!--<FadeOutThemeAnimation TargetName="DeterminateRoot" />-->

                    <DoubleAnimation Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />

                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame Value="{DynamicResource SystemAccentColor}" KeyTime="0:0:2.75" />
                        <LinearColorKeyFrame Value="{Binding Source={StaticResource SystemControlErrorTextForegroundBrushBindingProxy},Path=Data.Color}" KeyTime="0:0:3" />
                    </ColorAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="ErrorStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DeterminateProgressBarIndicator">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="IndeterminatePausedStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                        <!--<SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />-->
                    </DoubleAnimationUsingKeyFrames>
                    
                    <DoubleAnimation Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <!-- Both FadeOutThemeAnimation and a DoubleAnimation on Opacity are necessary
                    here.  The FadeOutThemeAnimation is necessary in the Indeterminate state so
                    that we can do a FadeInThemeAnimation when transitioning back to the
                    Determinate state.  The DoubleAnimation on Opacity is necessary to hide the
                    DeterminateRoot immediately so that it does not slowly fade out during each
                    iteration of the Indeterminate state animation. -->
                    <!--<FadeOutThemeAnimation TargetName="DeterminateRoot" />-->
                    <DoubleAnimation Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />

                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                        <LinearColorKeyFrame Value="{DynamicResource SystemAccentColor}" KeyTime="0:0:2.75" />
                        <LinearColorKeyFrame Value="{DynamicResource SystemBaseMediumLowColor}" KeyTime="0:0:3" />
                    </ColorAnimationUsingKeyFrames>
                </Storyboard>

                <Storyboard x:Key="PausedStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlForegroundAccentBrush}" />
                    </ObjectAnimationUsingKeyFrames>

                    <DoubleAnimation Storyboard.TargetName="DeterminateProgressBarIndicator" Storyboard.TargetProperty="Opacity" To="{DynamicResource ProgressBarIndicatorPauseOpacity}" Duration="0:0:0.25" />
                </Storyboard>
            </Grid.Resources>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="Updating" To="Determinate" Storyboard="{StaticResource UpdatingToDeterminateTransition}" />
                        <VisualTransition From="Paused" To="Determinate" Storyboard="{StaticResource PausedToDeterminateTransition}" />
                        <VisualTransition From="Indeterminate" To="Determinate" Storyboard="{StaticResource IndeterminateToDeterminateTransition}" />
                    </VisualStateGroup.Transitions>

                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Updating" />
                    <VisualState x:Name="Indeterminate" Storyboard="{StaticResource IndeterminateStoryboard}" />
                    <VisualState x:Name="IndeterminateError" Storyboard="{StaticResource IndeterminateErrorStoryboard}" />
                    <VisualState x:Name="Error" Storyboard="{StaticResource ErrorStoryboard}" />
                    <VisualState x:Name="IndeterminatePaused" Storyboard="{StaticResource IndeterminatePausedStoryboard}" />
                    <VisualState x:Name="Paused" Storyboard="{StaticResource PausedStoryboard}" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid x:Name="IndeterminateClip"
                  ClipToBounds="True">
                <Grid x:Name="IndeterminateRoot"
                      HorizontalAlignment="Left"
                      Opacity="0">
                    <Grid.RenderTransform>
                        <TranslateTransform />
                    </Grid.RenderTransform>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border x:Name="B5"
                            Grid.Column="0"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TranslateTransform />
                        </Border.RenderTransform>

                        <Ellipse x:Name="E5"
                                 Fill="{TemplateBinding Foreground}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TranslateTransform />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Border>

                    <Rectangle Grid.Column="1"
                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />

                    <Border x:Name="B4"
                            Grid.Column="2"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TranslateTransform />
                        </Border.RenderTransform>

                        <Ellipse x:Name="E4"
                                 Fill="{TemplateBinding Foreground}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TranslateTransform />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Border>

                    <Rectangle Grid.Column="3"
                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />

                    <Border x:Name="B3"
                            Grid.Column="4"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TranslateTransform />
                        </Border.RenderTransform>

                        <Ellipse x:Name="E3"
                                 Fill="{TemplateBinding Foreground}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TranslateTransform />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Border>

                    <Rectangle Grid.Column="5"
                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />

                    <Border x:Name="B2"
                            Grid.Column="6"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TranslateTransform />
                        </Border.RenderTransform>

                        <Ellipse x:Name="E2"
                                 Fill="{TemplateBinding Foreground}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TranslateTransform />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Border>

                    <Rectangle Grid.Column="7"
                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />

                    <Border x:Name="B1"
                            Grid.Column="8"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TranslateTransform />
                        </Border.RenderTransform>

                        <Ellipse x:Name="E1"
                                 Fill="{TemplateBinding Foreground}"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TranslateTransform />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Border>
                </Grid>
            </Grid>

            <Border x:Name="DeterminateRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <Rectangle x:Name="DeterminateProgressBarIndicator"
                           Margin="{TemplateBinding Padding}"
                           Fill="{TemplateBinding Foreground}"
                           RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                           RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                           HorizontalAlignment="Left" />
            </Border>
        </Grid>
    </ControlTemplate>

    <Style TargetType="controls:ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
        <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundBaseLowBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ProgressBarBorderThemeThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightTransparentBrush}" />
        <Setter Property="MinHeight" Value="{DynamicResource ProgressBarThemeMinHeight}" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="UseMetroIndeterminateStyle" Value="False" />
        <Setter Property="Template" Value="{StaticResource DefaultModernProgressBarTemplate}" />

        <Style.Triggers>
            <Trigger Property="UseMetroIndeterminateStyle" Value="True">
                <Setter Property="Template" Value="{StaticResource DefaultMetroProgressBarTemplate}" />
            </Trigger>

            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="{DynamicResource ProgressBarThemeMinHeight}" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>