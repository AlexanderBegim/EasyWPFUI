<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyWPFUI.Controls"
                    xmlns:primitives="clr-namespace:EasyWPFUI.Controls.Primitives"
                    xmlns:helpers="clr-namespace:EasyWPFUI.Controls.Helpers"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:EasyWPFUI.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/EasyWPFUI;component/Styles/TextStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/EasyWPFUI;component/Styles/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:CornerRadiusFilterConverter x:Key="TopLeftCornerRadiusDoubleValueConverter" Filter="TopLeftValue"/>
    <converters:CornerRadiusFilterConverter x:Key="BottomRightCornerRadiusDoubleValueConverter" Filter="BottomRightValue"/>

    <system:Double x:Key="NavigationBackButtonWidth">40</system:Double>
    <system:Double x:Key="NavigationBackButtonHeight">40</system:Double>
    <GridLength x:Key="NavigationBackButtonGridWidth">40</GridLength>

    <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">10,0,16,0</Thickness>
    <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">12,0,12,0</Thickness>
    <system:Double x:Key="PaneToggleButtonSize">40</system:Double>
    <system:Double x:Key="PaneToggleButtonHeight">40</system:Double>
    <GridLength x:Key="PaneToggleButtonGridHeight">40</GridLength>
    <system:Double x:Key="PaneToggleButtonWidth">40</system:Double>
    <system:Double x:Key="NavigationViewCompactPaneLength">40</system:Double>
    <system:Double x:Key="NavigationViewTopPaneHeight">40</system:Double>
    <system:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">48</system:Double>
    <system:Double x:Key="TopNavigationViewOverflowButtonWidth">48</system:Double>
    <system:Double x:Key="TopNavigationViewOverflowButtonHeight">40</system:Double>

    <system:Double x:Key="NavigationViewItemOnLeftMinHeight">40</system:Double>
    <system:Double x:Key="NavigationViewPaneHeaderRowMinHeight">4</system:Double>

    <system:Double x:Key="NavigationViewItemSeparatorHeight">1</system:Double>
    <system:Double x:Key="TopNavigationViewItemSeparatorWidth">1</system:Double>

    <!--<Thickness x:Key="NavigationViewToggleBorderThickness">1</Thickness>-->
    <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
    <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
    <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">12,0,12,0</Thickness>
    <Thickness x:Key="NavigationViewItemInnerHeaderMargin">10,0,0,0</Thickness>
    <Thickness x:Key="NavigationViewMinimalHeaderMargin">8,5,0,0</Thickness>
    <Thickness x:Key="NavigationViewHeaderMargin">12,5,0,11</Thickness>
    <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
    <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
    <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
    <Thickness x:Key="NavigationViewItemSeparatorMargin">16,10</Thickness>
    <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">16,10</Thickness>
    <Thickness x:Key="TopNavigationViewItemSeparatorMargin">10,0</Thickness>
    <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
    <Thickness x:Key="NavigationViewItemContentPresenterMargin">0,0,20,0</Thickness>
    <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,0,16,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
    <Thickness x:Key="NavigationViewItemExpandChevronMargin">-20,0,6,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,6,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

    <!-- The two resources below must be defined at the app level in order to take effect. -->
    <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
    <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

    <!-- The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
         used in the Top NavigationView's Overflow menu. -->
    <system:Double x:Key="NavigationViewItemExpandedGlyphFontSize">12.0</system:Double>
    <system:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</system:String>


    <Style x:Key="NavigationBackButtonNormalStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource NavigationViewBackButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="{StaticResource NavigationBackButtonHeight}" />
        <Setter Property="Width" Value="{StaticResource NavigationBackButtonWidth}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="Content" Value="&#xE72B;" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Background="{TemplateBinding Background}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <TextBlock x:Name="Content"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Text="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NavigationBackButtonSmallStyle" TargetType="Button" BasedOn="{StaticResource NavigationBackButtonNormalStyle}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
    </Style>
    
    <!-- -->

    <Style x:Key="PaneToggleButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewToggleBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot"
                          MinWidth="{TemplateBinding MinWidth}"
                          Height="{TemplateBinding MinHeight}"
                          Margin="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}"
                          HorizontalAlignment="Stretch">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" x:Name="PaneToggleButtonIconWidthColumn" />
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource PaneToggleButtonGridHeight}"/>
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />

                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="CheckedPointerOver" />
                                <VisualState x:Name="CheckedPressed" />
                                <VisualState x:Name="CheckedDisabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Width="{TemplateBinding MinWidth}">
                            <Viewbox x:Name="IconHost"
                                     Width="16"
                                     Height="16"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock x:Name="Icon"
                                           Text="&#xE700;"
                                           FontSize="{TemplateBinding FontSize}" />
                            </Viewbox>
                        </Border>

                        <ContentPresenter x:Name="ContentPresenter"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          Grid.Column="1"/>

                        <Border x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="2"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewButtonForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewPaneSearchButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Content" Value="&#xE11A;"/>
        <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewToggleBorderThickness}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="helpers:ControlHelper.FocusVisualMargin" Value="0" />
    </Style>

    <Style x:Key="NavigationViewOverflowButtonStyleWhenPaneOnTop" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{StaticResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{StaticResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="True" />
        <Setter Property="helpers:ControlHelper.FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}"
                          Background="{TemplateBinding Background}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent"
                                   Visibility="Collapsed" />

                        <Border x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <local:FontIcon x:Name="Icon"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                        FontSize="20"
                                        Glyph="&#xE10C;"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsHitTestVisible="False" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{StaticResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{StaticResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="True" />
        <Setter Property="helpers:ControlHelper.FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}"
                          Background="{TemplateBinding Background}">
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Rectangle x:Name="PointerRectangle" 
                                   Fill="Transparent" />
                        
                        <Border	x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"	
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        
                        <local:FontIcon x:Name="Icon"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                        FontSize="20"
                                        Glyph="&#xE10C;"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsHitTestVisible="False" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          MinHeight="{StaticResource NavigationViewItemOnLeftMinHeight}"
                          Background="{TemplateBinding Background}"
                          helpers:ControlHelper.IsTemplateFocusTarget="True">

                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </Storyboard>

                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen" />
                                <VisualState x:Name="ChevronVisibleClosed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <Grid x:Name="PresenterContentRootGrid">
                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <Grid Margin="4,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">

                                <Rectangle x:Name="SelectionIndicator"
                                           Width="2"
                                           Height="24"
                                           Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                           Opacity="0.0"
                                           RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                            </Grid>

                            <Grid HorizontalAlignment="Stretch"
                                  x:Name="ContentGrid"
                                  MinHeight="{StaticResource NavigationViewItemOnLeftMinHeight}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border x:Name="IconColumn"
                                        Width="{StaticResource NavigationViewCompactPaneLength}">
                                    <Viewbox x:Name="IconBox"
                                             Height="16"
                                             Margin="{StaticResource NavigationViewItemOnLeftIconBoxMargin}">
                                        <ContentPresenter x:Name="Icon"
                                                          Content="{TemplateBinding Icon}" />
                                    </Viewbox>
                                </Border>

                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{StaticResource NavigationViewItemContentPresenterMargin}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />

                                <Grid x:Name="ExpandCollapseChevron"
                                      Grid.Column="2"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="Right"
                                      Width="40"
                                      Margin="{StaticResource NavigationViewItemExpandChevronMargin}"
                                      Background="Transparent">
                                    <TextBlock RenderTransformOrigin="0.5, 0.5"
                                               Foreground="{DynamicResource NavigationViewItemForeground}"
                                               FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                               Text="{StaticResource NavigationViewItemExpandedGlyph}"
                                               FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="PointerState" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelected}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelectedPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                        </Trigger>

                        <Trigger Property="IconState" Value="IconCollapsed">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconColumn" Property="Width" Value="16" />
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleOpen">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="180" />-->
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleClosed">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="0" />-->
                        </Trigger>

                        <Trigger Property="PaneAndTopLevelItemState" Value="ClosedCompactAndTopLevelItem">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{StaticResource NavigationViewCompactItemContentPresenterMargin}" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushCheckedDisabled}" />
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          MinHeight="{StaticResource NavigationViewItemOnLeftMinHeight}"
                          Background="{TemplateBinding Background}"
                          helpers:ControlHelper.IsTemplateFocusTarget="True">

                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </Storyboard>

                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen" />
                                <VisualState x:Name="ChevronVisibleClosed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border	x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid x:Name="PresenterContentRootGrid">
                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <Grid Margin="4,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">

                                <Rectangle x:Name="SelectionIndicator"
                                           Width="2"
                                           Height="24"
                                           Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                           Opacity="0.0"
                                           RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                            </Grid>

                            <Grid x:Name="ContentGrid"
                                  MinHeight="{StaticResource NavigationViewItemOnLeftMinHeight}"
                                  HorizontalAlignment="Left">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border x:Name="IconColumn"
                                        Width="{Binding TemplateSettings.IconWidth}">
                                    <Viewbox x:Name="IconBox"
                                             Height="16"
                                             Margin="{StaticResource NavigationViewItemOnLeftIconBoxMargin}">
                                        <ContentPresenter x:Name="Icon"
                                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                                          Content="{TemplateBinding Icon}" />
                                    </Viewbox>
                                </Border>

                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  Margin="{StaticResource NavigationViewItemContentPresenterMargin}" />

                                <Grid x:Name="ExpandCollapseChevron"
                                      Grid.Column="2"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="Right"
                                      Width="40"
                                      Margin="{StaticResource NavigationViewItemExpandChevronMargin}"
                                      Background="Transparent">
                                    <TextBlock Foreground="{DynamicResource NavigationViewItemForeground}"
                                               RenderTransformOrigin="0.5, 0.5"
                                               FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                               Text="{StaticResource NavigationViewItemExpandedGlyph}"
                                               FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="PointerState" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelected}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelectedPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltChromeWhiteBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltChromeWhiteBrush}" />
                        </Trigger>

                        <Trigger Property="IconState" Value="IconCollapsed">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconColumn" Property="Width" Value="16" />
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleOpen">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="180" />-->
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleClosed">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="0" />-->
                        </Trigger>

                        <Trigger Property="PaneAndTopLevelItemState" Value="ClosedCompactAndTopLevelItem">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{StaticResource NavigationViewCompactItemContentPresenterMargin}" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="local:NavigationViewItem" x:Key="MUX_NavigationViewSettingsItemStyleWhenOnTopPane">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid x:Name="LayoutRoot" 
                          Background="{TemplateBinding Background}"
                          helpers:ControlHelper.IsTemplateFocusTarget="True">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="LayoutRoot.(media:RevealBrush.State)" Value="PointerOver" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PointerRectangle" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="LayoutRoot.(media:RevealBrush.State)" Value="Pressed" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PointerRectangle" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemBackgroundSelected}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PointerRectangle" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="LayoutRoot.(media:RevealBrush.State)" Value="PointerOver" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PointerRectangle" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="LayoutRoot.(media:RevealBrush.State)" Value="Pressed" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PointerRectangle" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled">
                                    <!--<VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="RevealBorder.BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushCheckedDisabled}"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PointerRectangle" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBorderBrushCheckedDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="PointerRectangle" 
                                   Fill="Transparent" />
                        
                        <Border	x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" >
                        </Border>

                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="IconRow" Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            
                            <Viewbox x:Name="IconBox"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     Height="16"
                                     Width ="48"
                                     Margin="0,0,0,0"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                                <ContentPresenter x:Name="Icon"
                                                  Content="{TemplateBinding Icon}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPane">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          Background="{TemplateBinding Background}"
                          helpers:ControlHelper.IsTemplateFocusTarget="True">
                        
                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </Storyboard>
                            
                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen" />
                                <VisualState x:Name="ChevronVisibleClosed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="PointerRectangle" 
                                   Fill="Transparent"
                                   Visibility="Collapsed" />
                        
                        <Border	x:Name="RevealBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"	
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Viewbox x:Name="IconBox"
                                     Height="16"
                                     Width="16"
                                     Margin="16,0,0,0"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                                <ContentPresenter x:Name="Icon"
                                                  Content="{TemplateBinding Icon}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"/>
                            </Viewbox>

                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{StaticResource TopNavigationViewItemContentPresenterMargin}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="Center" />
                            
                            <Grid x:Name="ExpandCollapseChevron"
                                  Grid.Column="2"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Right"
                                  Width="40"
                                  Margin="{StaticResource TopNavigationViewItemExpandChevronMargin}"
                                  Background="Transparent">

                                <TextBlock Foreground="{DynamicResource NavigationViewItemForeground}"
                                           RenderTransformOrigin="0.5, 0.5"
                                           FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                           Text="{StaticResource NavigationViewItemExpandedGlyph}"
                                           FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Grid>
                        
                        <Grid x:Name="SelectionIndicatorGrid"
                              Margin="16,0,16,4"
                              VerticalAlignment="Bottom">
                            <Rectangle x:Name="SelectionIndicator"
                                       Height="2"
                                       Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                       Opacity="0"
                                       RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                       RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="PointerState" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="NavigationViewIconPositionState" Value="IconOnly">
                            <Setter TargetName="PointerRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="MinWidth" Value="48" />
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SelectionIndicatorGrid" Property="Margin" Value="4,0,4,4" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Margin" Value="{StaticResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                        </Trigger>

                        <Trigger Property="NavigationViewIconPositionState" Value="ContentOnly">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{StaticResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                            <Setter TargetName="SelectionIndicatorGrid" Property="Margin" Value="12,0,12,4" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Margin" Value="{StaticResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleOpen">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="180" />-->
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleClosed">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="0" />-->
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushCheckedDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          Background="{TemplateBinding Background}"
                          helpers:ControlHelper.IsTemplateFocusTarget="True">

                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </Storyboard>

                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly" />
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen" />
                                <VisualState x:Name="ChevronVisibleClosed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent"
                                   Visibility="Collapsed" />

                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Viewbox x:Name="IconBox"
                                     Height="16"
                                     Width="16"
                                     Margin="16,0,0,0"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                                <ContentPresenter x:Name="Icon" 
                                                  Content="{TemplateBinding Icon}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>

                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{StaticResource TopNavigationViewItemContentPresenterMargin}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center" />

                            <Grid x:Name="ExpandCollapseChevron"
                                  Grid.Column="2"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Right"
                                  Width="40"
                                  Margin="{StaticResource NavigationViewItemExpandChevronMargin}"
                                  Background="Transparent">
                                <TextBlock Foreground="{DynamicResource NavigationViewItemForeground}"
                                           RenderTransformOrigin="0.5, 0.5"
                                           FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                           Text="{StaticResource NavigationViewItemExpandedGlyph}"
                                           FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Grid>

                        <Grid x:Name="SelectionIndicatorGrid"
                              Margin="16,0,16,4"
                              VerticalAlignment="Bottom">
                            <Rectangle x:Name="SelectionIndicator"
                                       Height="2"
                                       Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                       Opacity="0"
                                       RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                       RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="PointerState" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemRevealBackgroundFocused}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemRevealIconForegroundFocused}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemRevealContentForegroundFocused}" />
                        </Trigger>

                        <Trigger Property="NavigationViewIconPositionState" Value="IconOnly">
                            <Setter TargetName="PointerRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="MinWidth" Value="48" />
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SelectionIndicatorGrid" Property="Margin" Value="4,0" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Margin" Value="{StaticResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                        </Trigger>

                        <Trigger Property="NavigationViewIconPositionState" Value="ContentOnly">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{StaticResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                            <Setter TargetName="SelectionIndicatorGrid" Property="Margin" Value="12,0" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Margin" Value="{StaticResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleOpen">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="180" />-->
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleClosed">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="0" />-->
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          Height="40" 
                          Background="{TemplateBinding Background}"
                          helpers:ControlHelper.IsTemplateFocusTarget="True">
                        
                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </Storyboard>
                            
                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <!--<VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled">
                                    <!--<VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly">
                                    <!--<VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{DynamicResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconBox" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Double>180</system:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Double>0</system:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="PresenterContentRootGrid">
                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <Grid Margin="4,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">

                                <Rectangle x:Name="SelectionIndicator"
                                           Width="2"
                                           Height="24"
                                           Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                           Opacity="0.0"
                                           RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                            </Grid>
                            
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                
                                <Viewbox x:Name="IconBox" 
                                         Height="16"
                                         Width="16"
                                         Margin="16,0,0,0"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <ContentPresenter x:Name="Icon" 
                                                      Content="{TemplateBinding Icon}"
                                                      TextElement.Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{StaticResource TopNavigationViewItemOnOverflowContentPresenterMargin}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  VerticalAlignment="Center" />
                                <Grid x:Name="ExpandCollapseChevron"
                                      Grid.Column="2"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="Right"
                                      Width="40"
                                      Margin="{StaticResource TopNavigationViewItemOnOverflowExpandChevronMargin}"
                                      Background="Transparent">
                                    <Border Padding="{DynamicResource TopNavigationViewItemOnOverflowExpandChevronPadding}">
                                        <TextBlock Foreground="{DynamicResource NavigationViewItemForeground}"
                                                   RenderTransformOrigin="0.5, 0.5"
                                                   FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                                   Text="{StaticResource NavigationViewItemExpandedGlyph}"
                                                   FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center">
                                            <TextBlock.RenderTransform>
                                                <RotateTransform x:Name="ExpandCollapseChevronRotateTransform"/>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="PointerState" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>

                        <Trigger Property="PointerState" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>

                        <Trigger Property="NavigationViewIconPositionState" Value="ContentOnly">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{StaticResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleOpen">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="180" />-->
                        </Trigger>

                        <Trigger Property="ChevronState" Value="ChevronVisibleClosed">
                            <Setter TargetName="ExpandCollapseChevron" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="ExpandCollapseChevronRotateTransform" Property="Angle" Value="0" />-->
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NavigationViewItemHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>

    <!-- based on TitleTextBlockStyle -->
    <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle" TargetType="ContentControl">
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
        <Setter Property="Margin" Value="{StaticResource NavigationViewHeaderMargin}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    
    
    <!-- -->

    <Style TargetType="local:NavigationViewItemSeparator">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItemSeparator">
                    <Grid x:Name="NavigationViewItemSeparatorRootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                                <VisualState x:Name="HorizontalLine" />
                                <VisualState x:Name="HorizontalLineCompact" />
                                <VisualState x:Name="VerticalLine" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="SeparatorLine"
                                   Height="{StaticResource NavigationViewItemSeparatorHeight}"
                                   Margin="{StaticResource NavigationViewItemSeparatorMargin}"
                                   Fill="{DynamicResource NavigationViewItemSeparatorForeground}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="NavigationSeparatorLineState" Value="HorizontalLineCompact">
                            <Setter TargetName="SeparatorLine" Property="Margin" Value="{StaticResource NavigationViewCompactItemSeparatorMargin}" />
                        </Trigger>

                        <Trigger Property="NavigationSeparatorLineState" Value="VerticalLine">
                            <Setter TargetName="SeparatorLine" Property="Height" Value="20" />
                            <Setter TargetName="SeparatorLine" Property="Width" Value="{StaticResource TopNavigationViewItemSeparatorWidth}" />
                            <Setter TargetName="SeparatorLine" Property="Margin" Value="{StaticResource TopNavigationViewItemSeparatorMargin}" />
                            <Setter TargetName="SeparatorLine" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="SeparatorLine" Property="Fill" Value="{StaticResource TopNavigationViewItemSeparatorForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationViewItemHeader">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItemHeader">
                    <Grid x:Name="NavigationViewItemHeaderRootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PaneStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="HeaderTextCollapsed" To="HeaderTextVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="40" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.0,0.35 0.15,1.0" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="HeaderTextVisible" To="HeaderTextCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="20" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" KeySpline="0.0,0.35 0.15,1.0" Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="HeaderTextVisible"/>
                                <VisualState x:Name="HeaderTextCollapsed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="HeaderText.Visibility" Value="Collapsed" />
                                        <Setter Target="InnerHeaderGrid.Height" Value="20"/>
                                    </VisualState.Setters>-->

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="20" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Grid x:Name="InnerHeaderGrid"
                              Height="40"
                              HorizontalAlignment="Left"
                              Margin="{StaticResource NavigationViewItemInnerHeaderMargin}">
                            <TextBlock x:Name="HeaderText"
                                       VerticalAlignment="Center"
                                       Margin="0,-1,0,-1"
                                       Style="{StaticResource NavigationViewItemHeaderTextStyle}"
                                       Text="{TemplateBinding Content}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" />

    <Style TargetType="local:NavigationViewItem">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{StaticResource NavigationViewItemMargin}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="helpers:ControlHelper.UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation">
                                    <!--<VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Style" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnLeftNavigationReveal">
                                    <!--<VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Style" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationPrimary">
                                    <!--<VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Margin" Value="{DynamicResource TopNavigationViewItemMargin}"/>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                                        <contract7NotPresent:Setter Target="ChildrenFlyout.Placement" Value="Bottom"/>
                                        <contract7Present:Setter Target="ChildrenFlyout.Placement" Value="BottomEdgeAlignedLeft"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TopNavigationViewItemMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Style" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChildrenFlyout" Storyboard.TargetProperty="Placement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static primitives:FlyoutPlacementMode.BottomEdgeAlignedLeft}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationPrimaryReveal">
                                    <!--<VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Margin" Value="{DynamicResource TopNavigationViewItemMargin}"/>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
                                        <contract7NotPresent:Setter Target="ChildrenFlyout.Placement" Value="Bottom"/>
                                        <contract7Present:Setter Target="ChildrenFlyout.Placement" Value="BottomEdgeAlignedLeft"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TopNavigationViewItemMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Style" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationOverflow">
                                    <!--<VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationViewItemPresenter" Storyboard.TargetProperty="Style" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <primitives:NavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
                                                                Icon="{TemplateBinding Icon}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Margin="{TemplateBinding Margin}"
                                                                Padding="{TemplateBinding Padding}"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"
                                                                helpers:ControlHelper.UseSystemFocusVisuals="{TemplateBinding helpers:ControlHelper.UseSystemFocusVisuals}"
                                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                Content="{TemplateBinding Content}"
                                                                CornerRadius="{TemplateBinding CornerRadius}"
                                                                IsTabStop="false"
                                                                helpers:ControlHelper.IsTemplateFocusTarget="True" />
                        
                        <local:ItemsRepeater Grid.Row="1"
                                             Visibility="Collapsed"
                                             x:Name="NavigationViewItemMenuItemsHost">
                            <local:ItemsRepeater.Layout>
                                <local:StackLayout Orientation="Vertical"/>
                            </local:ItemsRepeater.Layout>
                        </local:ItemsRepeater>
                        
                        <primitives:FlyoutBase.AttachedFlyout>
                            <local:Flyout x:Name="ChildrenFlyout"
                                          Placement="RightEdgeAlignedTop">
                                <local:Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="local:FlyoutPresenter">
                                        <Setter Property="Padding" Value="{StaticResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="local:FlyoutPresenter">
                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">

                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Padding="{TemplateBinding Padding}"
                                                                CornerRadius="{TemplateBinding CornerRadius}">
                                                            <ContentPresenter x:Name="ContentPresenter"
                                                                              Content="{TemplateBinding Content}"
                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </local:Flyout.FlyoutPresenterStyle>
                                
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid"/>
                                </Grid>
                            </local:Flyout>
                        </primitives:FlyoutBase.AttachedFlyout>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationView">
        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="CompactPaneLength" Value="{StaticResource NavigationViewCompactPaneLength}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationView">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeGroup">
                                <VisualState x:Name="Compact" />

                                <VisualState x:Name="Expanded">
                                    <!--<VisualState.Setters>
                                        <Setter Target="RootSplitView.PaneBackground" Value="{DynamicResource NavigationViewExpandedPaneBackground}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <!-- TODO -->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootSplitView" Storyboard.TargetProperty="PaneBackground" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{DynamicResource NavigationViewExpandedPaneBackground}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Minimal">
                                    <!--<VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{DynamicResource NavigationViewMinimalHeaderMargin}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContent" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{StaticResource NavigationViewMinimalHeaderMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopNavigationMinimal" />

                                <VisualState x:Name="MinimalWithBackButton">
                                    <!--<VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{DynamicResource NavigationViewMinimalHeaderMargin}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContent" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{StaticResource NavigationViewMinimalHeaderMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TogglePaneGroup">
                                <VisualState x:Name="TogglePaneButtonVisible" />
                                <VisualState x:Name="TogglePaneButtonCollapsed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="HeaderGroup">
                                <VisualState x:Name="HeaderVisible" />
                                <VisualState x:Name="HeaderCollapsed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContent" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AutoSuggestGroup">
                                <VisualState x:Name="AutoSuggestBoxVisible" />
                                <VisualState x:Name="AutoSuggestBoxCollapsed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                                        <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AutoSuggestArea" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopPaneAutoSuggestArea" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateGroup">
                                <VisualState x:Name="NotClosedCompact" />
                                <VisualState x:Name="ClosedCompact">
                                    <!--<VisualState.Setters>
                                        <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed"/>
                                        <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneAutoSuggestBoxPresenter" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneAutoSuggestButton" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                <VisualState x:Name="ListSizeFull" />
                                <VisualState x:Name="ListSizeCompact" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                <VisualState x:Name="TitleBarVisible" />
                                <VisualState x:Name="TitleBarCollapsed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneContentGrid" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0,32,0,0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="OverflowLabelGroup">
                                <VisualState x:Name="OverflowButtonWithLabel" />
                                <VisualState x:Name="OverflowButtonNoLabel">
                                    <!--<VisualState.Setters>
                                        <Setter Target="TopNavOverflowButton.Style" Value="{DynamicResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopNavOverflowButton" Storyboard.TargetProperty="Style" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="BackButtonGroup">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <!--<VisualState.Setters>
                                        <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackButtonPlaceholderOnTopNav" Storyboard.TargetProperty="Width" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneVisibilityGroup">
                                <VisualState x:Name="PaneVisible" />
                                <VisualState x:Name="PaneCollapsed">
                                    <!--<VisualState.Setters>
                                        -->
                                    <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                                    <!-- write it here and interfere. But these values work together to hide -->
                                    <!-- the left pane. -->
                                    <!--
                                        <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                                        <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>-->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootSplitView" Storyboard.TargetProperty="CompactPaneLength" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Double>0</system:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneToggleButtonGrid" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Button grid -->
                        <Grid x:Name="PaneToggleButtonGrid"
                              Margin="0,0,0,8"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Canvas.ZIndex="100">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid x:Name="TogglePaneTopPadding"
                                  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                            <Grid x:Name="ButtonHolderGrid"
                                  Grid.Row="1">
                                <Button x:Name="NavigationViewBackButton"
                                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                        IsEnabled="{TemplateBinding IsBackEnabled}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewBackButtonToolTip"/>
                                    </ToolTipService.ToolTip>
                                </Button>

                                <Button x:Name="NavigationViewCloseButton"
                                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewCloseButtonToolTip"/>
                                    </ToolTipService.ToolTip>
                                </Button>

                                <Button x:Name="TogglePaneButton"
                                        Style="{TemplateBinding PaneToggleButtonStyle}"
                                        HorizontalAlignment="Center"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                        VerticalAlignment="Top">

                                    <TextBlock x:Name="PaneTitleTextBlock" 
                                               Grid.Column="0"
                                               Text="{TemplateBinding PaneTitle}"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource NavigationViewItemHeaderTextStyle}"/>
                                </Button>

                                <Grid x:Name="PaneTitleHolder"
                                      Visibility="Collapsed">
                                    <ContentControl x:Name="PaneTitlePresenter"
                                                    Margin="{StaticResource NavigationViewPaneTitlePresenterMargin}"
                                                    IsTabStop="False"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"/>
                                </Grid>
                            </Grid>
                        </Grid>

                        <!-- Content layouts -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- DisplayMode top -->
                            <StackPanel x:Name="TopNavArea"
                                        Background="{DynamicResource NavigationViewTopPaneBackground}"
                                        Grid.Row="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Canvas.ZIndex="1">

                                <Grid x:Name="TopNavTopPadding"
                                      Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"/>

                                <Grid x:Name="TopNavGrid" 
                                      Height="{StaticResource NavigationViewTopPaneHeight}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{StaticResource NavigationBackButtonGridWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*" MinWidth="{StaticResource TopNavigationViewPaneCustomContentMinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid x:Name="TopNavLeftPadding" 
                                          Grid.Column="1"
                                          Width="0"/>

                                    <ContentControl x:Name="PaneHeaderOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="2"/>

                                    <ContentControl x:Name="PaneTitleOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="2"/>

                                    <!-- Top nav ItemsRepeater -->
                                    <local:ItemsRepeaterScrollHost Grid.Column="3">
                                        <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollBarVisibility="Hidden">
                                            <local:ItemsRepeater AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                                 x:Name="TopNavMenuItemsHost">
                                                <local:ItemsRepeater.Layout>
                                                    <local:StackLayout Orientation="Horizontal"/>
                                                </local:ItemsRepeater.Layout>
                                            </local:ItemsRepeater>
                                        </ScrollViewer>
                                    </local:ItemsRepeaterScrollHost>

                                    <Button x:Name="TopNavOverflowButton"
                                            Grid.Column="4"
                                            Content="More"
                                            Margin="{StaticResource TopNavigationViewOverflowButtonMargin}"
                                            Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                        <helpers:ButtonHelper.Flyout>
                                            <local:Flyout Placement="BottomEdgeAlignedRight">
                                                <local:Flyout.FlyoutPresenterStyle>
                                                    <Style TargetType="local:FlyoutPresenter">
                                                        <Setter Property="Padding" Value="{StaticResource TopNavigationViewOverflowMenuPadding}" />
                                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="local:FlyoutPresenter">
                                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                                        <Border Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                Padding="{TemplateBinding Padding}"
                                                                                CornerRadius="{TemplateBinding CornerRadius}">
                                                                            <ContentPresenter x:Name="ContentPresenter"
                                                                                              Content="{TemplateBinding Content}"
                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                                        </Border>
                                                                    </ScrollViewer>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </local:Flyout.FlyoutPresenterStyle>

                                                <local:ItemsRepeaterScrollHost>
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                        <local:ItemsRepeater x:Name="TopNavMenuItemsOverflowHost"/>
                                                    </ScrollViewer>
                                                </local:ItemsRepeaterScrollHost>
                                            </local:Flyout>
                                        </helpers:ButtonHelper.Flyout>
                                    </Button>

                                    <ContentControl x:Name="PaneCustomContentOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="5"/>

                                    <Grid x:Name="TopPaneAutoSuggestArea"
                                          Height="{StaticResource NavigationViewTopPaneHeight}"
                                          Grid.Column="6">

                                        <ContentControl x:Name="TopPaneAutoSuggestBoxPresenter"
                                                        Margin="{StaticResource TopNavigationViewAutoSuggestBoxMargin}"
                                                        MinWidth="48"
                                                        IsTabStop="False"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Center"
                                                        VerticalAlignment="Center"/>
                                    </Grid>

                                    <ContentControl x:Name="PaneFooterOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="7" />
                                    <!-- Top footer menu ItemsRepeater -->
                                    <local:ItemsRepeater Grid.Column="8"
                                                         x:Name="TopFooterMenuItemsHost">
                                        <local:ItemsRepeater.Layout>
                                            <local:StackLayout Orientation="Horizontal"/>
                                        </local:ItemsRepeater.Layout>
                                    </local:ItemsRepeater>

                                </Grid>

                                <Border x:Name="TopNavContentOverlayAreaGrid">
                                    <ContentPresenter Content="{TemplateBinding ContentOverlay}" />
                                </Border>
                            </StackPanel>

                            <!-- Displaymode (compact/minimal/normal) left -->
                            <local:SplitView x:Name="RootSplitView"
                                             Background="{TemplateBinding Background}"
                                             CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                             DisplayMode="Inline"
                                             IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                             IsTabStop="False"
                                             OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                             PaneBackground="{DynamicResource NavigationViewDefaultPaneBackground}"
                                             Grid.Row="1">

                                <local:SplitView.Pane>
                                    <Grid x:Name="PaneContentGrid"
                                          HorizontalAlignment="Left"
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="0"/>
                                            <!-- above button margin + back button space -->
                                            <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" MinHeight="{StaticResource NavigationViewPaneHeaderRowMinHeight}"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="8"/>
                                            <!-- above list margin -->
                                            <RowDefinition x:Name="ItemsContainerRow" Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Grid x:Name="ContentPaneTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                        <Grid Grid.Row="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition x:Name="PaneHeaderContentBorderRow"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn"/>
                                                <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <ContentControl x:Name="PaneHeaderContentBorder"
                                                            IsTabStop="False"
                                                            VerticalContentAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            Grid.Column="2" />
                                        </Grid>

                                        <Grid x:Name="AutoSuggestArea"
                                              Grid.Row="3"
                                              Height="{StaticResource NavigationViewTopPaneHeight}"
                                              VerticalAlignment="Center">

                                            <ContentControl x:Name="PaneAutoSuggestBoxPresenter"
                                                            Margin="{StaticResource NavigationViewAutoSuggestBoxMargin}"
                                                            IsTabStop="False"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalContentAlignment="Center"/>

                                            <Button x:Name="PaneAutoSuggestButton"
                                                    Visibility="Collapsed"
                                                    Style="{StaticResource NavigationViewPaneSearchButtonStyle}"
                                                    Width="{TemplateBinding CompactPaneLength}"/>
                                        </Grid>

                                        <ContentControl x:Name="PaneCustomContentBorder"
                                                        IsTabStop="False"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Grid.Row="4" />

                                        <!-- "Non header" content -->
                                        <Grid x:Name="ItemsContainerGrid" Grid.Row="6" Margin="0,0,0,8">
                                            <Grid.RowDefinitions>
                                                <RowDefinition x:Name="MenuItemsRow" Height="Auto" MinHeight="{StaticResource NavigationViewItemOnLeftMinHeight}"/>
                                                <!-- MenuItems -->
                                                <RowDefinition Height="*" MinHeight="21"/>
                                                <!-- Fill spacing -->
                                                <RowDefinition Height="Auto" />
                                                <!-- PaneFooter -->
                                                <RowDefinition x:Name="FooterItemsRow" Height="Auto" MinHeight="{StaticResource NavigationViewItemOnLeftMinHeight}"/>
                                                <!-- FooterItems -->
                                            </Grid.RowDefinitions>

                                            <!-- MenuItems -->
                                            <local:ItemsRepeaterScrollHost HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Stretch">
                                                <ScrollViewer x:Name="MenuItemsScrollViewer"
                                                              KeyboardNavigation.TabNavigation="Local"
                                                              VerticalScrollBarVisibility="Auto">
                                                    <!-- Left nav ItemsRepeater -->
                                                    <local:ItemsRepeater x:Name="MenuItemsHost"
                                                                         AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" />
                                                </ScrollViewer>
                                            </local:ItemsRepeaterScrollHost>

                                            <local:NavigationViewItemSeparator x:Name="VisualItemsSeparator"
                                                                               Grid.Row="1"
                                                                               VerticalAlignment="Center"
                                                                               Visibility="Collapsed"
                                                                               HorizontalAlignment="Stretch" />

                                            <!-- PaneFooter -->
                                            <ContentControl x:Name="FooterContentBorder"
                                                            IsTabStop="False"
                                                            VerticalContentAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            Grid.Row="2" />

                                            <!-- FooterItems -->
                                            <local:ItemsRepeaterScrollHost Grid.Row="3">
                                                <ScrollViewer x:Name="FooterItemsScrollViewer">
                                                    <local:ItemsRepeater x:Name="FooterMenuItemsHost" />
                                                </ScrollViewer>
                                            </local:ItemsRepeaterScrollHost>
                                        </Grid>
                                    </Grid>
                                </local:SplitView.Pane>

                                <local:SplitView.Content>
                                    <Grid x:Name="ContentGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid x:Name="ContentTopPadding"
                                              Grid.ColumnSpan="2"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"/>

                                        <Grid x:Name="ContentLeftPadding"
                                              Grid.Row="1"/>

                                        <ContentControl x:Name="HeaderContent"
                                                        Grid.Row="1"
                                                        Grid.Column="1"
                                                        MinHeight="{StaticResource PaneToggleButtonHeight}"
                                                        IsTabStop="False"
                                                        Content="{TemplateBinding Header}"
                                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"/>

                                        <ContentPresenter Grid.Row="2"
                                                          Grid.ColumnSpan="2"
                                                          Content="{TemplateBinding Content}"/>
                                    </Grid>
                                </local:SplitView.Content>
                            </local:SplitView>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="PaneStateListSizeState" Value="ListSizeCompact">
                            <Setter TargetName="PaneContentGrid" Property="Width" Value="{Binding CompactPaneLength, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:NavigationView}}" />
                            <Setter TargetName="PaneTitleTextBlock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PaneHeaderContentBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PaneCustomContentBorder" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="FooterContentBorder" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>